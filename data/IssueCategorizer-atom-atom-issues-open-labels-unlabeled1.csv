"Id","Title","Body","Label"
"1","Search feature in Settings","It's absolutely essential.
If there is a search that I couldn't find, it would be bad design.
Thank you for your time.",""
"2","Uncaught Error: ENOENT: no such file or directory, lstat '~/Desktop/Login System (Node, MySQL)/ M...","[Enter steps to reproduce:]

1. Create a folder inside a folder in atom.
2. Try to move it a level down.

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Linux Mint
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: ENOENT: no such file or directory, lstat '/home/artideusz/Desktop/Login System (Node, MySQL)/ MySQL)'

```
At fs.js:115

Error: ENOENT: no such file or directory, lstat '/home/artideusz/Desktop/Login System (Node, MySQL)/ MySQL)'
    at Proxy.realpathSync (fs.js:1435:7)
    at Proxy.fs.realpathSync (ELECTRON_ASAR.js:306:40)
    at TreeView.moveEntry (/usr/share/atom/resources/app/static/<embedded>:14:1008489)
    at TreeView.onDrop (/usr/share/atom/resources/app/static/<embedded>:14:1015418)
    at HTMLDivElement.<anonymous> (/usr/share/atom/resources/app/static/<embedded>:14:989049)
```

### Commands

```
     -2:37.6.0 snippets:next-tab-stop (input.hidden-input)
     -2:37.6.0 snippets:expand (input.hidden-input)
     -2:37.6.0 editor:indent (input.hidden-input)
  2x -2:37.1.0 core:backspace (input.hidden-input)
     -2:36.7.0 snippets:next-tab-stop (input.hidden-input)
     -2:36.6.0 snippets:expand (input.hidden-input)
     -2:36.6.0 editor:indent (input.hidden-input)
     -2:36.5.0 snippets:next-tab-stop (input.hidden-input)
     -2:36.5.0 snippets:expand (input.hidden-input)
     -2:36.5.0 editor:indent (input.hidden-input)
 19x -2:36.3.0 core:backspace (input.hidden-input)
     -2:31.6.0 tree-view:remove (div.tool-panel.tree-view)
     -1:52.9.0 core:save (div.tool-panel.tree-view)
  4x -0:51.3.0 core:backspace (input.hidden-input)
     -0:19.4.0 tree-view:add-folder (ol.tree-view-root.full-menu.list-tree.has-collapsable-children.focusable-panel)
     -0:17.6.0 core:confirm (input.hidden-input)
```

### Non-Core Packages

```
atom-ternjs 0.20.0 
emmet 2.4.3 
hyperclick 0.1.5 
```

",""
"3","Crashing on macOS 10.14 Mojave","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

Saving a new file crashes Atom. At the moment I am only able to work by copy and pasting a existing script and renaming it. 

### Steps to Reproduce

1. Ctrl + N to create new file 
2. Ctrl + S to save new file 


**Expected behavior:**

1. Ctrl + N to create new file 
2. Ctrl + S to save new file 
3. (Window asking what to name new file)

**Actual behavior:**

3. (crashes)

**Reproduces how often:**

100 %

### Versions

MacOS Majave
10.14.6

Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

",""
"4","Uncaught Error: Module did not self-register.","[Enter steps to reproduce:]

1. Open a .blade.php file
2. Error appears and is not possible write any text

**Atom**: 1.40.0 x64
**Electron**: 3.1.10
**OS**: Mac OS X 10.14.6
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Module did not self-register.

```
At ELECTRON_ASAR.js:166

Error: Module did not self-register.
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:166:20)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:740:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:180:18)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:1:688158)
    at get_KeyboardLayoutManager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744622)
    at get_manager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744724)
    at Object.getCurrentKeyboardLayout (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744850)
    at e.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:1087821)
    at KeymapManager.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1246932)
    at KeymapManager.handleKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1244917)
    at WindowEventHandler.handleDocumentKeyEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:284329)
```

### Commands

```
```

### Non-Core Packages

```
atom-commander 0.12.0 
atom-ide-ui 0.13.0 
atom-typescript 13.4.0 
blade-snippets 0.2.0 
blade-spacer 0.4.2 
editorconfig 2.5.0 
language-blade 0.44.0 
laravel 0.7.1 
laravel-5-snippets 0.19.0 
laravel-snippets 2.1.0 
remote-ftp 2.2.2 
```

",""
"5","Uncaught Error: Cannot call function 'isFocused' on missing remote object 17","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Unknown Windows version
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'isFocused' on missing remote object 17

```
At C:\Users\emue\AppData\Local\atom\app-1.41.0\resources\electron.asar\renderer\api\remote.js:222

Error: Cannot call function 'isFocused' on missing remote object 17
    at throwRPCError (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:148:17)
    at ~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
     -0:00.4.0 Python run: run-f5 (input.hidden-input)
```

### Non-Core Packages

```
atom-beautify 0.33.4 
atom-ide-ui 0.13.0 
atom-python-run 0.9.7 
atom-terminal-panel 4.4.4 
docblockr 0.13.7 
emmet 2.4.3 
ide-python 1.5.0 
native-ui 0.27.0 
seti-icons 1.5.4 
seti-ui 1.11.0 
simplified-chinese-menu 5.3.5 
vim-mode 0.66.0 
```

",""
"6","Uncaught Error: Cannot call function 'getPosition' on missing remote object 103","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.15.1
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 103

```
At /Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 103
    at throwRPCError (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:148:17)
    at /Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
     -8:11.3.0 tree-view:remove (span.name.icon.icon-file-directory)
     -7:56.5.0 tree-view:copy-project-path (span.name.icon.icon-file-directory)
     -7:46.9.0 core:paste (input.hidden-input)
     -7:31.4.0 tree-view:copy-project-path (span.name.icon.icon-file-text)
     -6:57.1.0 core:paste (input.hidden-input)
 26x -6:52.7.0 core:backspace (input.hidden-input)
     -6:46.1.0 core:save (input.hidden-input)
```

### Non-Core Packages

```
atom-runner 2.7.1 
busy-signal 2.0.1 
intentions 1.1.5 
language-restructuredtext 1.1.2 
linter 2.3.1 
linter-ui-default 1.8.0 
pandoc-convert 1.1.1 
platformio-ide-terminal 2.10.0 
rst-preview-pandoc 0.1.12 
rubocop-auto-correct 1.5.1 
ruby-block 0.3.6 
```

",""
"7","Autoclose tags, autocomplete htmlentities, highlight selected should be core features","Hello Atom Dev team, 

Atom is really one of the best and IDE of choice for coders and it should rank up there. However, I think the following features should be included as core and not just installed. For example:-

- Autoclose tags,
- highlight similar selected words or variables
- a caret to display a dropdown of opened tabs or autoscroll, without having all of the tabs stack at the top and their title names barely visible.

This would great!
",""
"8","Can't create git branch for local repository","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

I can't create a branch for a local repository

### Steps to Reproduce

1. Install atom new
2. Create in git tab a repo
3. Try to create a branch

**Expected behavior:**

A branch should be created

**Actual behavior:**

Nothing happens

**Reproduces how often:**

The whole time

### Versions

1.41.0
",""
"9","Panes steal focus when resizing","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

When the pane contents is something like an iframe, it will steal focus and stop the drag when resizing panes. This is relevant for embedded PDF viewing (especially relevant to LaTeX use), as the viewer will steal focus and prevent the PDF view from being resized properly.


### Steps to Reproduce

1. Have the following in your `init.js` file
```javascript
atom.workspace.addOpener(uri => {
  if (uri === ""frame://example"") {
    const frame = document.createElement(""iframe"");
    frame.setAttribute(""style"", ""width:100%;height:100%"");

    return {
      getTitle: () => ""iframe"",
      element: frame,
    };
  }
})

atom.workspace.addOpener(uri => {
  if (uri === ""editor://example"") {
    return atom.workspace.buildTextEditor();
  }
})

atom.workspace.open(""frame://example"");
atom.workspace.open(""editor://example"");
```
2. Move the TextEditor panel so that both are visible side by side
3. Resize the panels by dragging the resize element towards the iframe.

**Expected behavior:**

<!-- What you expect to happen -->
The iframe panel gets smaller

**Actual behavior:**

<!-- What actually happens -->
The panel does not get smaller unless you drag it really slowly

**Reproduces how often:**

<!-- What percentage of the time does it reproduce? -->
100%

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

Ubuntu 19.04

### Additional Information

[PR here](https://github.com/atom/atom/pull/19862)",""
"10","Uncaught Error: Module did not self-register.","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Mac OS X 10.14.6
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Module did not self-register.

```
At ELECTRON_ASAR.js:166

Error: Module did not self-register.
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:166:20)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:740:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:180:18)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:1:688158)
    at get_KeyboardLayoutManager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744622)
    at get_manager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744724)
    at Object.getCurrentKeyboardLayout (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744850)
    at e.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:1087821)
    at KeymapManager.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1246932)
    at KeymapManager.handleKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1244917)
    at WindowEventHandler.handleDocumentKeyEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:284329)
```

### Commands

```
```

### Non-Core Packages

```
atom-dbt 0.4.4 
atom-dbt-formatter 1.3.1 
```

",""
"11","Uncaught Error: Cannot call function 'getPosition' on missing remote object 692","[Enter steps to reproduce:]

Opened two different instances of Atom and wait ~24 hours while pc was in sleep mode several times. Then one of Atom instances show this error.

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Microsoft Windows 10 Pro
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 692

```
At C:\Users\user\AppData\Local\atom\app-1.41.0\resources\electron.asar\renderer\api\remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 692
    at throwRPCError (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:148:17)
    at ~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (~/AppData/Local/atom/app-1.41.0/resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
```

### Non-Core Packages

```
hyperclick 0.1.5 
ink 0.11.5 
julia-client 0.11.2 
language-julia 0.19.1 
minimap 4.29.9 
multi-cursor 3.0.0 
selection-highlight 0.1.6 
tool-bar 1.2.0 
uber-juno 0.3.0 
```

",""
"12","Uncaught Error: Cannot call function 'getPosition' on missing remote object 737Error: Cannot cal...","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Ubuntu 18.04.3
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 737
Error: Cannot call function 'getPosition' on missing remote object 737
    at throwRPCError (/usr/share/atom/resources/electron.asar/browser/rpc-server.js:145:17)
    at EventEmitter.<anonymous> (/usr/share/atom/resources/electron.asar/browser/rpc-server.js:367:7)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/usr/share/atom/resources/electron.asar/browser/api/web-contents.js:294:13)
    at WebContents.emit (events.js:182:13)


```
At /usr/share/atom/resources/electron.asar/renderer/api/remote.js:219

Error: Cannot call function 'getPosition' on missing remote object 737
Error: Cannot call function 'getPosition' on missing remote object 737
    at throwRPCError (/usr/share/atom/resources/electron.asar/browser/rpc-server.js:145:17)
    at EventEmitter.<anonymous> (/usr/share/atom/resources/electron.asar/browser/rpc-server.js:367:7)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/usr/share/atom/resources/electron.asar/browser/api/web-contents.js:294:13)
    at WebContents.emit (events.js:182:13)

    at metaToException (/usr/share/atom/resources/electron.asar/renderer/api/remote.js:271:17)
    at Object.exception (/usr/share/atom/resources/electron.asar/renderer/api/remote.js:219:30)
    at metaToValue (/usr/share/atom/resources/electron.asar/renderer/api/remote.js:223:28)
    at Object.remoteMemberFunction (/usr/share/atom/resources/electron.asar/renderer/api/remote.js:123:16)
    at AtomEnvironment.getWindowDimensions (/usr/share/atom/resources/app/static/<embedded>:1:705395)
    at AtomEnvironment.storeWindowDimensions (/usr/share/atom/resources/app/static/<embedded>:1:705810)
    at WindowEventHandler.handleWindowBlur (/usr/share/atom/resources/app/static/<embedded>:11:285354)
```

### Commands

```
  2x -6:47.6.0 editor:newline (input.hidden-input)
     -6:43.8.0 core:backspace (input.hidden-input)
     -6:42.3.0 core:paste (div.line.cursor-line)
  5x -6:38.3.0 core:undo (input.hidden-input)
     -6:31.4.0 core:redo (input.hidden-input)
 10x -6:30.4.0 core:undo (input.hidden-input)
     -4:08.6.0 core:copy (span.syntax--entity.syntax--other.syntax--attribute-name)
  2x -3:56.7.0 editor:newline (input.hidden-input)
     -3:51 core:paste (div.line.cursor-line)
     -3:24.7.0 editor:indent-selected-rows (input.hidden-input)
  9x -2:54.3.0 core:backspace (input.hidden-input)
     -2:05.6.0 core:move-left (input.hidden-input)
     -1:47.8.0 core:backspace (input.hidden-input)
     -1:12.4.0 core:cut (span.syntax--support.syntax--type.syntax--property-name.syntax--css)
     -1:08.9.0 tree-view:remove (span.name.icon.icon-file-text)
     -0:56.4.0 core:backspace (input.hidden-input)
```

### Non-Core Packages

```
atom-beautify 0.33.4 
autocomplete 0.47.0 
autocomplete-modules 2.3.0 
autocomplete-paths 2.12.2 
autosave-onchange 1.5.1 
busy-signal 2.0.1 
double-tag 1.7.0 
emmet 2.4.3 
goto-definition 1.3.4 
highlight-selected 0.16.0 
intentions 1.1.5 
language-babel 2.85.0 
linter 2.3.1 
linter-eslint 8.5.5 
linter-ui-default 1.8.0 
pigments 0.40.2 
platformio-ide-terminal 2.10.0 
prettier-atom 0.58.2 
```

",""
"13","Automatically add ATOM_DEV_RESOURCE_PATH to .bashrc","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

---

Keep in mind that Atom is highly customizable in a number of ways and we strongly prefer that you consider these options before filing this issue:

* https://flight-manual.atom.io/using-atom/sections/basic-customization/: tweak Atom's configuration, styles, and keybindings.
* https://flight-manual.atom.io/using-atom/sections/atom-packages/: install a community package.
* https://flight-manual.atom.io/hacking-atom/: use the Atom API in your init script, to create a package, or to enhance an existing package.

If you're convinced that none of these options are appropriate for the feature you want, please explain why that's the case by completely filling out the issue template below.

Also note that the Atom team has finite resources so it's unlikely that we'll work on feature requests. If we're interested in a particular feature however, we'll follow up and ask you to submit an RFC to talk about it in more detail.

-->

## Summary

<!-- One paragraph explanation of the feature. -->

Adding an option to the `script/bootstrap` command to automatically add the ATOM_DEV_RESOURCE_PATH to `.bashrc` file on Linux.  Avoid the need to export the path manually.
It is used by simply adding an (optional) argument to the `script/bootstrap`  command : either `--save-path` or `-p`.  If no argument is given, the script behaves just like before.

## Motivation

<!-- Why are we doing this? What use cases does it support? What is the expected outcome? -->

While trying to install Atom from sources I ran in a lot of errors, most of them because I simply didn't read the documentation, and some of them because I didn't read it in enough details.  This is 100% my bad, but it made me want to try to make the installation even more autonomous.  This first step is an easy one, just to see how you would react.

## Describe alternatives you've considered

<!-- A clear and concise description of the alternative solutions you've considered. Be sure to explain why Atom's existing customizability isn't suitable for this feature. -->

Well, reading the manual is obviously a good solution.  But that's too easy.  I could have only implemented the solution for me, but I wanted to share it with others.

## Additional context

<!-- Add any other context or screenshots about the feature request here. -->

The feature is already [implemented](https://github.com/geverartsdev/atom/commit/106eefe5105dc8650f6e7f44cb29f06fd7f0dc41) on my own [fork](https://github.com/geverartsdev/atom), ready to be merged (but I am posting this issue to avoid skipping steps).
",""
"14","Uncaught Error: The specified module could not be found./\?\~\AppData\Local\atom\app-1.40.1\res...","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Microsoft Windows 10 Home
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: The specified module could not be found.
\\?\C:\Users\Cameron\AppData\Local\atom\app-1.40.1\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node

```
At ELECTRON_ASAR.js:166

Error: The specified module could not be found.
\\?\C:\Users\Cameron\AppData\Local\atom\app-1.40.1\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:166:20)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:740:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:180:18)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:1:714332)
    at get_KeyboardLayoutManager (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:14:2747069)
    at get_manager (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:14:2747171)
    at Object.getCurrentKeyboardLayout (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:14:2747297)
    at e.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:14:1087835)
    at KeymapManager.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:11:1246932)
    at KeymapManager.handleKeyboardEvent (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:11:1244917)
    at WindowEventHandler.handleDocumentKeyEvent (~/AppData/Local/atom/app-1.40.1/resources/app/static/<embedded>:11:284329)
```

### Commands

```
     -1:12.9.0 tree-view:add-file (span.name.icon.icon-file-directory)
     -0:59.4.0 tree-view:show-current-file-in-file-manager (div.line)
```

### Non-Core Packages

```
atom-discord 2.0.2 
autocomplete-javascript 0.0.2 
autocomplete-python 1.14.1 
autocomplete-unity 0.1.3 
busy-signal 2.0.1 
emmet 2.4.3 
file-icons 2.1.35 
intentions 1.1.5 
linter 2.3.1 
linter-ui-default 1.8.0 
pigments 0.40.2 
script 3.18.1 
teletype 0.13.4 
```

",""
"15","Uncaught Error: tunneling socket could not be established, statusCode=503","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Unknown Windows version
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: tunneling socket could not be established, statusCode=503

```
At internal/streams/legacy.js:57

Error: tunneling socket could not be established, statusCode=503
    at ClientRequest.onConnect (/app.asar/node_modules/tunnel-agent/index.js:166:19)
    at Object.onceWrapper (events.js:273:13)
    at ClientRequest.emit (events.js:182:13)
    at Socket.socketOnData (_http_client.js:474:11)
    at Socket.emit (events.js:182:13)
    at addChunk (_stream_readable.js:283:12)
    at readableAddChunk (_stream_readable.js:264:11)
    at Socket.Readable.push (_stream_readable.js:219:10)
    at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
```

### Commands

```
     -0:35.3.0 command-palette:toggle (atom-pane.pane.active)
     -0:31 core:move-down (input.hidden-input)
     -0:30.3.0 core:confirm (input.hidden-input)
     -0:30.3.0 settings-view:open (atom-pane.pane.active)
```

### Non-Core Packages

```

```

",""
"16","Uncaught Error: Cannot call function 'getPosition' on missing remote object 5666Error: Cannot ca...","[Enter steps to reproduce:]

1. installed git-merge add-on
2. tried to merge a local branch into another

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Mac OS X 10.14.5
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 5666
Error: Cannot call function 'getPosition' on missing remote object 5666
    at throwRPCError (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:145:17)
    at EventEmitter.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:367:7)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/api/web-contents.js:294:13)
    at WebContents.emit (events.js:182:13)


```
At /Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:219

Error: Cannot call function 'getPosition' on missing remote object 5666
Error: Cannot call function 'getPosition' on missing remote object 5666
    at throwRPCError (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:145:17)
    at EventEmitter.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:367:7)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/api/web-contents.js:294:13)
    at WebContents.emit (events.js:182:13)

    at metaToException (/Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:271:17)
    at Object.exception (/Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:219:30)
    at metaToValue (/Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:223:28)
    at Object.remoteMemberFunction (/Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:123:16)
    at AtomEnvironment.getWindowDimensions (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:1:705396)
    at AtomEnvironment.storeWindowDimensions (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:1:705811)
    at WindowEventHandler.handleWindowResize (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:285420)
    at l (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1197399)
```

### Commands

```
```

### Non-Core Packages

```
autocomplete-python 1.14.1 
busy-signal 2.0.1 
compare-files 0.8.1 
django-templates 0.5.0 
docblock-python 0.15.0 
file-icons 2.1.33 
git-merge 0.4.1 
git-time-machine 2.1.0 
highlight-selected 0.16.0 
intentions 1.1.5 
language-restructuredtext 1.1.2 
linter 2.3.0 
linter-flake8 2.4.0 
linter-python-pep8 0.2.0 
linter-ui-default 1.7.1 
material-colors 0.1.0 
minimap 4.29.9 
minimap-highlight-selected 4.6.1 
pandoc 0.2.2 
python-autopep8 0.1.3 
python-debugger 0.2.0 
python-indent 1.2.3 
python-tools 0.6.9 
script 3.18.1 
split-diff 1.6.0 
terminal-plus 0.14.5 
```

",""
"17","Uncaught Error: ENOENT: no such file or directory, lstat '/ MD 21046'","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Mac OS X 10.14.6
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: ENOENT: no such file or directory, lstat '/ MD 21046'

```
At fs.js:143

Error: ENOENT: no such file or directory, lstat '/ MD 21046'
    at Proxy.realpathSync (fs.js:1744:7)
    at Proxy.fs.realpathSync (ELECTRON_ASAR.js:335:40)
    at TreeView.moveEntry (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:1009292)
    at TreeView.onDrop (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:1016221)
    at HTMLDivElement.<anonymous> (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:989852)
```

### Commands

```
  5x -6:42.3.0 core:backspace (input.hidden-input)
     -1:51.9.0 core:copy (input.hidden-input)
     -1:43.8.0 tree-view:move (span.name.icon.icon-file-text)
     -1:42.9.0 core:paste (input.hidden-input)
     -1:35.9.0 core:confirm (input.hidden-input)
     -1:26.6.0 core:move-up (input.hidden-input)
     -1:14.3.0 core:delete (input.hidden-input)
     -1:13 core:save (input.hidden-input)
     -1:07.9.0 tree-view:add-folder (div.tool-panel.tree-view)
     -0:59.9.0 core:confirm (input.hidden-input)
     -0:53.5.0 tree-view:remove (span.name.icon.icon-file-directory)
     -0:42.6.0 tree-view:add-file (div.header.list-item)
     -0:29.8.0 core:confirm (input.hidden-input)
     -0:12.3.0 core:save (div.tool-panel.tree-view)
```

### Non-Core Packages

```
git-plus 8.7.1 
```

",""
"18","Add log output feature to button push/fetch","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

---

Keep in mind that Atom is highly customizable in a number of ways and we strongly prefer that you consider these options before filing this issue:

* https://flight-manual.atom.io/using-atom/sections/basic-customization/: tweak Atom's configuration, styles, and keybindings.
* https://flight-manual.atom.io/using-atom/sections/atom-packages/: install a community package.
* https://flight-manual.atom.io/hacking-atom/: use the Atom API in your init script, to create a package, or to enhance an existing package.

If you're convinced that none of these options are appropriate for the feature you want, please explain why that's the case by completely filling out the issue template below.

Also note that the Atom team has finite resources so it's unlikely that we'll work on feature requests. If we're interested in a particular feature however, we'll follow up and ask you to submit an RFC to talk about it in more detail.

-->

## Summary

<!-- One paragraph explanation of the feature. -->
Add log output feature to button push/fetch

## Motivation
In the JavaScript ecosystem it is common to add git hooks to ensure code consistency, for example:
before pushing
- Validate / format code style rules (eslint / prettier)
- Run the unit test suite
- Generate code coverage report
- Build the project
- Run E2E Tests

after pulling
- Check if important files have changed like `package.json`
- Check if my work files have changed

All these tasks generate logs that need to be analyzed for success and failure, it will be very useful to have access to them through the atom.<!-- Why are we doing this? What use cases does it support? What is the expected outcome? -->

<!-- ## Describe alternatives you've considered -->

<!-- A clear and concise description of the alternative solutions you've considered. Be sure to explain why Atom's existing customizability isn't suitable for this feature. -->

## Additional context
It's a little nasty to push / commit code that was intercepted by a git hook and get an error log in a popup. Not very useful.

Thank you all, you are doing a great job
<!-- Add any other context or screenshots about the feature request here. -->
",""
"19","Uncaught Error: The specified module could not be found./\?\~\AppData\Local\atom\app-1.41.0\res...","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Microsoft Windows 7 Professional 
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: The specified module could not be found.
\\?\C:\Users\user\AppData\Local\atom\app-1.41.0\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node

```
At ELECTRON_ASAR.js:160

Error: The specified module could not be found.
\\?\C:\Users\user\AppData\Local\atom\app-1.41.0\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:160:31)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:722:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:169:18)
    at Module.load (internal/modules/cjs/loader.js:602:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:541:12)
    at Function.Module._load (internal/modules/cjs/loader.js:533:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:1:727373)
    at get_KeyboardLayoutManager (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746273)
    at get_manager (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746375)
    at Object.getCurrentKeyboardLayout (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746501)
    at e.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:1087039)
    at KeymapManager.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:1249633)
    at KeymapManager.handleKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:1247618)
    at WindowEventHandler.handleDocumentKeyEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:284598)
```

### Commands

```
```

### Non-Core Packages

```

```

",""
"20","Uncaught Error: dlopen(/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom....","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.13.6
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: dlopen(/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app.asar.unpacked/node_modules/keyboard-layout/build/Release/keyboard-layout-manager.node, 1): image not found

```
At ELECTRON_ASAR.js:160

Error: dlopen(/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app.asar.unpacked/node_modules/keyboard-layout/build/Release/keyboard-layout-manager.node, 1): image not found
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:160:31)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:722:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:169:18)
    at Module.load (internal/modules/cjs/loader.js:602:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:541:12)
    at Function.Module._load (internal/modules/cjs/loader.js:533:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:1:688212)
    at get_KeyboardLayoutManager (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:14:2743819)
    at get_manager (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:14:2743921)
    at Object.getCurrentKeyboardLayout (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:14:2744047)
    at e.keystrokeForKeyboardEvent (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:14:1087018)
    at KeymapManager.keystrokeForKeyboardEvent (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:11:1249633)
    at KeymapManager.handleKeyboardEvent (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:11:1247618)
    at WindowEventHandler.handleDocumentKeyEvent (/private/var/folders/q3/s4jcckxs26j5csf74xvqm2nh0000gn/T/wzQL.uQJ8An/Atom.app/Contents/Resources/app/static/<embedded>:11:284598)
```

### Commands

```
```

### Non-Core Packages

```

```

",""
"21","Bug when using multiple keyboard layouts on Windows 10","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

### Steps to Reproduce

1. Add a secondary keyboard layout (or unset the default input method) in Windows Settings
2. Open Atom.exe
3. Start typing in Atom Core (not using an on-screen keyboard or mouse)

**Expected behavior:**

Text to be edited/inputed without error.

**Actual behavior:**

Atom generates an exception when using keyboard within Atom Core.

**Reproduces how often:**

100% (Any stroke of the keyboard within any interface of Atom will throw an Electron.js Exception)

### Versions

Atom    : 1.40.1
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0

OS Name: Microsoft Windows 10 Home
Version: 10.0.18362 Build 18362


### Additional Information

I have attempted to see if this was a problem with only non-utf languages, but errors are still being thrown when having other keyboard inputs.

Full error:
[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Microsoft Windows 10 Home
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: The specified module could not be found.
\\?\C:\Users\jerem\AppData\Local\atom\app-1.41.0\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node

```
At ELECTRON_ASAR.js:160

Error: The specified module could not be found.
\\?\C:\Users\jerem\AppData\Local\atom\app-1.41.0\resources\app.asar.unpacked\node_modules\keyboard-layout\build\Release\keyboard-layout-manager.node
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:160:31)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:722:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:169:18)
    at Module.load (internal/modules/cjs/loader.js:602:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:541:12)
    at Function.Module._load (internal/modules/cjs/loader.js:533:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:1:727373)
    at get_KeyboardLayoutManager (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746273)
    at get_manager (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746375)
    at Object.getCurrentKeyboardLayout (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:2746501)
    at e.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:1087039)
    at KeymapManager.keystrokeForKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:1249633)
    at KeymapManager.handleKeyboardEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:1247618)
    at WindowEventHandler.handleDocumentKeyEvent (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:11:284598)
```

### Commands

```
```

### Non-Core Packages

```
emmet 2.4.3 
```


",""
"22","Uncaught Error: Cannot call function 'getPosition' on missing remote object 2475","[Enter steps to reproduce:]

1. Unfortunately unsure - came back to my laptop and the error popup was in place (I assume that points to a memory leak, but that's speculative on my part)

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.15.1
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 2475

```
At /Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 2475
    at throwRPCError (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:148:17)
    at /Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
```

### Non-Core Packages

```
busy-signal 2.0.1 
intentions 1.1.5 
language-slim 1.0.1 
linter 2.3.1 
linter-rubocop 2.5.3 
linter-ui-default 1.8.0 
minimap 4.29.9 
pigments 0.40.2 
shared-settings 0.0.6 
svn 0.0.14 
sync-settings 0.8.6 
```

",""
"23","Uncaught Error: Cannot call function 'getPosition' on missing remote object 110","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.15.1
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 110

```
At /Applications/Atom 2.app/Contents/Resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 110
    at throwRPCError (/Applications/Atom 2.app/Contents/Resources/electron.asar/browser/rpc-server.js:148:17)
    at /Applications/Atom 2.app/Contents/Resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/Applications/Atom 2.app/Contents/Resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom 2.app/Contents/Resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
     -3:52.9.0 autocomplete-plus:confirm (input.hidden-input)
     -3:51.6.0 core:move-right (input.hidden-input)
  2x -3:23.1.0 core:backspace (input.hidden-input)
     -2:38.1.0 core:save (input.hidden-input)
     -1:56.9.0 emmet:insert-formatted-line-break-only (input.hidden-input)
     -1:56.9.0 editor:newline (input.hidden-input)
     -1:54.9.0 autocomplete-plus:confirm (input.hidden-input)
     -1:54.9.0 snippets:expand (atom-text-editor.editor.is-focused.autocomplete-active)
     -1:49.6.0 core:backspace (input.hidden-input)
     -1:43.6.0 core:move-right (input.hidden-input)
  6x -1:35.5.0 core:backspace (input.hidden-input)
     -1:27.2.0 emmet:insert-formatted-line-break-only (input.hidden-input)
     -1:27.2.0 editor:newline (input.hidden-input)
     -1:18.8.0 core:save (input.hidden-input)
     -0:17.9.0 emmet:insert-formatted-line-break-only (input.hidden-input)
     -0:17.9.0 editor:newline (input.hidden-input)
```

### Non-Core Packages

```
ask-stack 2.2.0 
atom-beautify 0.33.4 
atom-live-server 2.3.0 
busy-signal 2.0.1 
emmet 2.4.3 
file-icons 2.1.36 
highlight-selected 0.16.0 
intentions 1.1.5 
jshint 1.8.6 
linter 2.3.1 
linter-jscs 4.2.2 
linter-jshint 3.1.17 
linter-ui-default 1.8.0 
minimap 4.29.9 
minimap-pigments 0.2.2 
pigments 0.40.2 
teletype 0.13.4 
todo 0.6.0 
```

",""
"24","Uncaught Error: Module did not self-register.","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Unknown macOS version
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Module did not self-register.

```
At ELECTRON_ASAR.js:166

Error: Module did not self-register.
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:166:20)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:740:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:180:18)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:1:688158)
    at get_KeyboardLayoutManager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744622)
    at get_manager (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744724)
    at Object.getCurrentKeyboardLayout (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:2744850)
    at e.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:14:1087821)
    at KeymapManager.keystrokeForKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1246932)
    at KeymapManager.handleKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1244917)
    at WindowEventHandler.handleDocumentKeyEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:284329)
```

### Commands

```
     -1:11.6.0 tree-view:move (span.name.icon.sql-icon.medium-orange)
     -0:35 editor:consolidate-selections (input.hidden-input)
     -0:23.8.0 tree-view:move (span.name.icon.sql-icon.medium-orange)
  6x -0:20.8.0 editor:consolidate-selections (input.hidden-input)
```

### Non-Core Packages

```
atom-dbt 0.4.4 
change-case 0.6.5 
file-icons 2.1.36 
minimap 4.29.9 
multi-cursor 3.0.0 
pyocd 0.1.6 
script 3.25.0 
todo-show 2.3.2 
```

",""
"25","Uncaught Error: Cannot call function 'setTouchBar' on missing remote object 5916","[Enter steps to reproduce:]

1. I'm honestly unsure, sorry Â¯\_(ãƒ„)_/Â¯ 

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.15
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'setTouchBar' on missing remote object 5916

```
At /Applications/Atom.app/Contents/Resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'setTouchBar' on missing remote object 5916
    at throwRPCError (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:148:17)
    at /Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/Applications/Atom.app/Contents/Resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/Applications/Atom.app/Contents/Resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
     -0:59.5.0 find-and-replace:show (input.hidden-input)
     -0:59.1.0 core:paste (input.hidden-input)
     -0:57.6.0 find-and-replace:find-next (input.hidden-input)
     -0:43.6.0 core:save (input.hidden-input)
     -0:38.2.0 markdown-writer:insert-new-line (input.hidden-input)
     -0:38.2.0 editor:newline (input.hidden-input)
     -0:37.4.0 markdown-writer:insert-new-line (input.hidden-input)
     -0:37.4.0 editor:newline (input.hidden-input)
     -0:27.8.0 markdown-writer:insert-new-line (input.hidden-input)
     -0:27.8.0 autocomplete-plus:confirm (input.hidden-input)
     -0:27.8.0 autocomplete-plus:activate (atom-text-editor.editor.is-focused)
     -0:24.7.0 core:backspace (input.hidden-input)
     -0:23.3.0 core:save (input.hidden-input)
     -0:21 pane:show-item-1 (input.hidden-input)
     -0:12.9.0 pane:show-next-item (input.hidden-input)
     -0:08.1.0 pane:show-previous-item (input.hidden-input)
```

### Non-Core Packages

```
advanced-open-file 0.16.8 
atom-beautify 0.33.4 
atom-django 0.3.2 
atom-jade 0.3.0 
atom-jinja2 0.6.0 
atom-material-syntax 1.0.8 
atom-material-ui 2.1.3 
atom-tachyons 1.6.0 
base16-spacegray-syntax 0.2.0 
busy-signal 2.0.1 
city-lights-icons 1.1.1 
city-lights-syntax 1.1.8 
city-lights-ui 1.5.3 
date 2.6.0 
dusk-syntax 2.0.0 
editorconfig 2.5.0 
emmet 2.4.3 
geo-editor 0.2.1 
gist-it 0.9.2 
import-sf-mono 1.0.1 
intentions 1.1.5 
jekyll 2.1.0 
language-liquid 0.7.0 
language-pug 0.0.22 
language-vue 0.25.0 
linter 2.3.1 
linter-jsonlint 1.4.0 
linter-markdown 5.2.10 
linter-ui-default 1.8.0 
markdown-writer 2.11.9 
merge-conflicts 1.4.5 
php-twig 4.0.0 
pigments 0.40.2 
pretty-json 2.1.2 
rest-client 1.3.1 
sort-lines 0.19.0 
source-preview-pug 0.2.0 
spacegray-atom-dark-ui 1.0.2 
spacegray-dark-neue-ui 1.7.1 
spacegray-dark-syntax 0.2.0 
spacegray-dark-ui 0.13.0 
sync-settings 0.8.6 
tool-bar 1.2.0 
tool-bar-markdown-writer 0.5.0 
```

",""
"26","Atom Update Error Ä°'cant Ä°nstall ATOM ***WÄ°NDOWS 8.1***","Hi All i get ""aTOM Ä°Nstaller has stopped working"" *UPDATE.EXE*
***[21.11.19 14:19:32] Ä±nfo: Program: Starting Squirrel Updater: --install . --rerunningWithoutUAC
[21.11.19 14:19:32] Ä±nfo: Program: Starting install, writing to C:\Users\Emre\AppData\Local\SquirrelTemp
[21.11.19 14:19:32] Ä±nfo: Program: About to install to: C:\Users\Emre\AppData\Local\atom
[21.11.19 14:19:32] Ä±nfo: CheckForUpdateImpl: Reading RELEASES file from C:\Users\Emre\AppData\Local\SquirrelTemp
[21.11.19 14:19:32] fatal: Finished with unhandled exception: System.AggregateException: Bir veya daha fazla hata oluÅŸtu. ---> System.MissingMethodException: YÃ¶ntem bulunamadÄ±: 'System.String System.String.Format(System.IFormatProvider, System.String, System.Object)'.
   konum: NuGet.SemanticVersion.Parse(String version)
   konum: Squirrel.VersionExtensions.ToSemanticVersion(String fileName)
   konum: Squirrel.Utility.<>c.<FindCurrentVersion>b__29_0(ReleaseEntry x)
   konum: System.Linq.EnumerableSorter`2.ComputeKeys(TElement[] elements, Int32 count)
   konum: System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   konum: System.Linq.OrderedEnumerable`1.<GetEnumerator>d__0.MoveNext()
   konum: System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)
   konum: Squirrel.Utility.FindCurrentVersion(IEnumerable`1 localReleases)
   konum: Squirrel.UpdateManager.CheckForUpdateImpl.determineUpdateInfo(UpdaterIntention intention, IEnumerable`1 localReleases, IEnumerable`1 remoteReleases, Boolean ignoreDeltaUpdates)
   konum: Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: Squirrel.UpdateManager.<CheckForUpdate>d__7.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: Squirrel.UpdateManager.<FullInstall>d__10.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   konum: Squirrel.Update.Program.<Install>d__4.MoveNext()
   --- Ä°Ã§ Ã¶zel durum yÄ±ÄŸÄ±nÄ± izlemesinin sonu ---
   konum: System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   konum: System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   konum: Squirrel.Update.Program.executeCommandLine(String[] args)
   konum: Squirrel.Update.Program.main(String[] args)
---> (Ä°Ã§ Ã–zel Durum #0) System.MissingMethodException: YÃ¶ntem bulunamadÄ±: 'System.String System.String.Format(System.IFormatProvider, System.String, System.Object)'.
   konum: NuGet.SemanticVersion.Parse(String version)
   konum: Squirrel.VersionExtensions.ToSemanticVersion(String fileName)
   konum: Squirrel.Utility.<>c.<FindCurrentVersion>b__29_0(ReleaseEntry x)
   konum: System.Linq.EnumerableSorter`2.ComputeKeys(TElement[] elements, Int32 count)
   konum: System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   konum: System.Linq.OrderedEnumerable`1.<GetEnumerator>d__0.MoveNext()
   konum: System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)
   konum: Squirrel.Utility.FindCurrentVersion(IEnumerable`1 localReleases)
   konum: Squirrel.UpdateManager.CheckForUpdateImpl.determineUpdateInfo(UpdaterIntention intention, IEnumerable`1 localReleases, IEnumerable`1 remoteReleases, Boolean ignoreDeltaUpdates)
   konum: Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: Squirrel.UpdateManager.<CheckForUpdate>d__7.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: Squirrel.UpdateManager.<FullInstall>d__10.MoveNext()
--- Ã–zel durumun oluÅŸturulduÄŸu Ã¶nceki konumdan baÅŸlayan yÄ±ÄŸÄ±n izlemesinin sonu ---
   konum: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   konum: System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   konum: Squirrel.Update.Program.<Install>d__4.MoveNext()<---***",""
"27","Atom 1.41 not showing images in Markdown Preview","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [ X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

Images showing inconsistently on 1.41 in Markdown Preview with Catalina

### Steps to Reproduce

1. Confirm Catalina File Permissions
2. delete entire GitHub repository and sycn again
3. Delete and reinstall Atom and sign back into GitHub

**Expected behavior:**

See all images in Markdown Preview

**Actual behavior:**

Only a few images show.  Checked formatting and files on local drive.  Do not see a difference.  


**Reproduces how often:**

Every time

### Versions

1.41 Atom and Catalina 10.15.1
### Additional Information


![image](https://user-images.githubusercontent.com/36549872/69266040-a0885080-0b87-11ea-9136-2df9bb656318.png)

",""
"28","Uncaught Error: ENOENT: no such file or directory, lstat '~/projects/py38/hw2'","[Enter steps to reproduce:]

1. Open a second instance of `atom`.
2. Add a project tree to the second instance with a different directory than the one you're working
    with.
3. Cut a symbolic link to your `cgi-bin` directory from the second project and try to paste it into the
    other.
4. Paste the symbolic link into a subdirectory of the first project and then the error message with the
    link to start this issue appeared.

The entire directory represented by the project tree in the second window is now gone from the file system.


**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Linux Mint
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: ENOENT: no such file or directory, lstat '/home/fuzzy/projects/py38/hw2'

```
At fs.js:115

Error: ENOENT: no such file or directory, lstat '/home/fuzzy/projects/py38/hw2'
    at Proxy.realpathSync (fs.js:1435:7)
    at Proxy.fs.realpathSync (ELECTRON_ASAR.js:306:40)
    at TreeView.moveEntry (/usr/share/atom/resources/app/static/<embedded>:14:1008489)
    at TreeView.onDrop (/usr/share/atom/resources/app/static/<embedded>:14:1015418)
    at HTMLDivElement.<anonymous> (/usr/share/atom/resources/app/static/<embedded>:14:989049)
```

### Commands

```
     -3:56 pane:split-right-and-copy-active-item (li.directory.entry.list-nested-item.expanded.selected)
     -3:38.9.0 pane:close (div.item-views)
     -2:10.2.0 editor:consolidate-selections (input.hidden-input)
     -2:10.2.0 core:cancel (input.hidden-input)
     -0:29.5.0 tree-view:paste (span.name.icon.icon-file-directory)
```

### Non-Core Packages

```

```

",""
"29","Uncaught Error: ENOENT: no such file or directory, lstat '~/Downloads\europe.png'","Tried to drag and drop an image from downloads.

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Microsoft Windows 8.1
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: ENOENT: no such file or directory, lstat 'C:\Users\Hannah\Downloads\europe.png'

```
At fs.js:115

Error: ENOENT: no such file or directory, lstat 'C:\Users\Hannah\Downloads\europe.png'
    at Proxy.realpathSync (fs.js:1435:7)
    at Proxy.fs.realpathSync (ELECTRON_ASAR.js:306:40)
    at TreeView.moveEntry (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:1008510)
    at TreeView.onDrop (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:1015683)
    at HTMLDivElement.<anonymous> (~/AppData/Local/atom/app-1.41.0/resources/app/static/<embedded>:14:989070)
```

### Commands

```
  3x -8:53.4.0 core:backspace (input.hidden-input)
     -8:48.9.0 intentions:highlight (input.hidden-input)
     -8:48.2.0 core:save (input.hidden-input)
```

### Non-Core Packages

```
atom-beautify 0.33.4 
atom-ternjs 0.20.0 
autoclose-html 0.23.0 
busy-signal 2.0.1 
csslint 1.2.0 
emmet 2.4.3 
intentions 1.1.5 
language-ejs 0.4.0 
linter 2.3.1 
linter-jshint 3.1.17 
linter-ui-default 1.8.0 
pigments 0.40.2 
```

",""
"30","Data loss/corruption after crash","My computer crashed while editing a large python project and now the main file is completely blank. The file is now 10kB of 0x20 followed by a 0x0d, 0x0a. There is nothing in .atom/recovery. I hadn't committed about 5 days of work on this file. Is it just completely gone? I don't understand how the crash could completely destroy the file. Does atom have any autosaves, backups, or cached copys? ",""
"31","Not possible to scroll down, view text while editing multiple lines","## Summary

I want to be able to scroll / see the text I'm editing not only the first occurrence where the first cursor is placed.

## Motivation

When editing text I want to make sure that the edits are what I expect. But this simply does not work in the current state. 

## Describe alternatives you've considered

Scroll down, edit text, scroll down, scroll down, scroll down",""
"32","""atom --wait"" does not work","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

On Windows 10, running `atom --wait` does not cause the command shell to block until the relevant file tab or application window is closed.  This makes it impossible to use atom as the default editor for git.

### Steps to Reproduce

1. Install latest build of Git for Windows 10 x64.
2. Install latest build of Atom editor for Windows 10 x64.
NOTE: In the preceding two steps, make sure to check the the install option to make Atom the default editor for git.
3. Edit an existing file within an existing Git repo.
4. Using a Windows Command Prompt, run `git add -u`.
5. Using a Windows Command Prompt, run `git commit`.

**Expected behavior:**

Atom should launch to act as commit message editor, and Command Prompt should block until the user closes the Atom application window containing the commit message file or simple closes the commit message file tab within the Atom application window.

**Actual behavior:**

Atom launches to act as commit message editor, but the Command Prompt does not block, and instead git issues the following error output inside the Command Prompt:

```
hint: Waiting for your editor to close the file...
Aborting commit due to empty commit message.
```

**Reproduces how often:**

100%

### Versions

WinVer: Microsoft Windows 10 version 1909 (OS Build 18363.476)
 Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

### Additional Information

I've already run `git config --global core.editor` to verify that the command line configured in git should be correct:

```
$ git config --global core.editor
""D:\Users\Keith\AppData\Local\atom\app-1.41.0\atom.exe"" --wait
```
",""
"33","Uncaught Error: Cannot call function 'getPosition' on missing remote object 46","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Ubuntu 18.04.3
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 46

```
At /snap/atom/242/usr/share/atom/resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 46
    at throwRPCError (/snap/atom/242/usr/share/atom/resources/electron.asar/browser/rpc-server.js:148:17)
    at /snap/atom/242/usr/share/atom/resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/snap/atom/242/usr/share/atom/resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/snap/atom/242/usr/share/atom/resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
     -1:59.5.0 github:toggle-github-tab (atom-workspace.workspace.scrollbars-visible-always.theme-one-dark-syntax.theme-one-dark-ui)
  5x -1:36.7.0 core:close (input.hidden-input)
```

### Non-Core Packages

```
platformio-ide-terminal 2.10.0 
```

",""
"34","Atom 1.41.0 does not open windows on macOS 10.14","### Prerequisites

* [X ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

Since upgrade on 14.0 Atom will not open a window (Configuration, file, etc.).

### Steps to Reproduce

I had a a preexisting setup.

**Expected behavior:**
Open configuraton window or file window

**Actual behavior:**
Atom opens and presents the menu in menu bar.
It opens the window to pickup a file, but silently ignores command ( does not open editing window).
It does not open the Config window.

**Reproduces how often:**
Systematically 
### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

ProductName:	Mac OS X
ProductVersion:	10.14.6
BuildVersion:	18G103

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->

I tried safe mode, renamed the `~/.atom-backup`,  [deleted the whole installation](https://discuss.atom.io/t/how-do-i-uninstall-atom-on-macos/56064),  and reinstalled the image file, but to now avail.

I have also attempted [the advice on how to update to the latest version on MacOS](https://flight-manual.atom.io/faq/sections/i-am-unable-to-update-to-the-latest-version-of-atom-on-macos-how-do-i-fix-this/)

It seems that Atom itself is unable to start Chrome, or something?",""
"35","Append scopes instead of overriding them in tree-sitter grammars","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

---

Keep in mind that Atom is highly customizable in a number of ways and we strongly prefer that you consider these options before filing this issue:

* https://flight-manual.atom.io/using-atom/sections/basic-customization/: tweak Atom's configuration, styles, and keybindings.
* https://flight-manual.atom.io/using-atom/sections/atom-packages/: install a community package.
* https://flight-manual.atom.io/hacking-atom/: use the Atom API in your init script, to create a package, or to enhance an existing package.

If you're convinced that none of these options are appropriate for the feature you want, please explain why that's the case by completely filling out the issue template below.

Also note that the Atom team has finite resources so it's unlikely that we'll work on feature requests. If we're interested in a particular feature however, we'll follow up and ask you to submit an RFC to talk about it in more detail.

-->

## Summary

When creating a grammar, there needs to be an option to append scopes instead of overriding them.

## Motivation

When targeting tree-sitter nodes in a grammar file, scopes inevitably get repeated. This makes grammars cumbersome and hard to maintain.

## Describe alternatives you've considered

None.

## Additional context

Consider the following example:

```cson
# Identifier
'identifier': [
  {
    # Match a long list of exceptions
    match: '^(Exception|TypeError|VeryLongListOfExceptions)$',
    scopes: 'entity.class.exception'
  },
  'entity'
]

# Inherited class
'class_definition > argument_list > identifier': [
  {
    # Match a long list of exceptions (again)
    match: '^(Exception|TypeError|VeryLongListOfExceptions)$',
    scopes: 'entity.class.exception.inherited'
  },
  'entity.class.inherited'
]
```

Would be much easier to maintain if scopes were appendable:

```cson
# Identifier
'identifier': [
  {
     # Match a long list of exceptions
    match: '^(Exception|TypeError|VeryLongListOfExceptions)$',
    scopes: 'entity.class.exception'
  },
  'entity'
]

# Inherited class
'class_definition > argument_list > identifier': + 'class.inherited' # Append
```

",""
"36","Atom is not saving or opening","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

Note: [`--clear-window-state` does not seem to do much](https://discuss.atom.io/t/unexpected-atom-clear-window-state-behaviour/69833?u=larsgw), but from what I have seen it does not help with the issue.

### Description

After opening a few files, I cannot save changes or open additional files. This is fixed for a while after restarting, but not for long. I narrowed it down to the `github` package (with an open Git tab).

### Steps to Reproduce

  1. Open the Git tab
  2. Open files
  3. Save changes to files

**Expected behavior:**

Continue to be able to open and save files.

**Actual behavior:**

Saving and opening silently fails, both in terms of UI and what is in the file system.

**Reproduces how often:**

Every time, but the number of files you can open seems to differ. I only ever get to save once though.

### Versions

```
> atom -v
Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

> uname -v
#1 SMP Debian 5.3.7-1 (2019-10-19)
```

### Additional Information

  - See also #18114 (locked due to inactivity and a lot of ""+1""s from people with other problems)
  - I posted [on the forum](https://discuss.atom.io/t/files-not-opening-or-saving-debian/69839?u=larsgw)",""
"37","Atom silently fails to start up when incorrect path given on command line","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

I found that when calling atom from the command line, 
```
atom myfile.py test/test_myfile.py
```
atom may fail silently and not start up.

As it turns out, directory `test` did not exist, my tests were in directory `tests` (note the trailing 's') instead. I have verified this behaviour both with multiple file arguments and with a single file argument as well as with wildcard arguments.

Current behaviour: Atom does not start up at all and returns to the command line, failing silently. There does not appear to be any crash log associated with this behaviour.

Expected behaviour: Atom provides some sort of error message (such as ""path <path> not found"") or proceeds starting up 

Rather than failing silently, it would make sense to provide a message back to the command line such as ""path not found"", or to finish starting up into the UI and present a dialog showing either an error message or offering to create the path+file.


<!-- Description of the issue -->

### Steps to Reproduce

1. Ensure atom is not already running
2. From the command line, start up atom to open a file from a path that doesn't exist, for instance
```
atom nonexistingpath/myfile.txt
```

In my case I tried opening `test/test.py` where directory `test` didn't exist (rather it was called `tests`).

**Expected behavior:**

- Atom provides any kind of error message useful for troubleshooting (either in the UI or on the command line) and/or helps creating the missing path

**Actual behavior:**

- Nothing happens. Atom returns to the command line, failing silently. There doesn't seem to be a crash log.

**Reproduces how often:**

100%

### Versions

Reproduced with Atom version: 1.41.0 (x64), Ubuntu oct. 2019

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->
",""
"38","Quit Atom leaves several ""Atom Helper""  processes active","### Prerequisites

[x] - Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
[x] - Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
[x] - Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
[x] - Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
[x] - Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

### Steps to Reproduce

1. I've opened atom on project I open every day
2. Close atom
3. Open Activity Monitor


**Expected behavior:**

I expected all ""Atom Helper"" processes to have been terminated

**Actual behavior:**

![Screenshot 2019-11-08 at 10 05 26](https://user-images.githubusercontent.com/136777/68468480-04b62680-0210-11ea-9166-105c3b26bf61.png)

**Reproduces how often:**

All the time

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

### Additional Information




<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->
",""
"39","The horizontal wheel of mouse is invalid","version: 1.41.0 x64(win10) electron 4.2.7 chrome 69.0.3497.128 node v10.11.0
mouse: logi m590
The horizontal wheel of mouse does not work in Atom(win10). But the horizontal wheel of mouse works well in Atom(Ubuntu). I mean when I open a PDF file in Atom(win10), I cannot use the  horizontal wheel of mouse, but sometimes it works. The pdf plugin is ""pdf-view"".
",""
"40","Atom 1.41 on Linux periodically makes a white flash and doesn't crash but generates a coredump","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

If you use Atom 1.41 on Linux the GUI will periodically make a white flash and the application will not crash but it will generate a coredump.  No specific steps cause the white flash to happen you just have to use the application for an unspecified amount of time and it will periodically happen.  This problem didn't occur in 1.40.1 or earlier version so I'm guessing it might have to do with the Electron upgrade? 

```bash
$ sudo journalctl | grep atom
Nov 05 12:45:57 dubbi audit[30999]: ANOM_ABEND auid=1000 uid=1000 gid=1000 ses=2 subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 pid=30999 comm=""atom"" exe=""/usr/share/atom/atom"" sig=11 res=1
Nov 05 12:45:57 dubbi kernel: atom[30999]: segfault at 7f83ad0e1fff ip 00007f82b600f5db sp 00007fff7955c2c0 error 6 in vmwgfx_dri.so[7f82b5bfa000+c8e000]
Nov 05 12:45:58 dubbi systemd-coredump[37620]: Process 30999 (atom) of user 1000 dumped core.
                                               #5  0x0000557b9a686904 n/a (atom)
                                               #6  0x0000557b9a68686e n/a (atom)
                                               #7  0x0000557b9a686cf4 n/a (atom)
                                               #8  0x0000557b9a687367 n/a (atom)
                                               #9  0x0000557b9a6964c8 n/a (atom)
                                               #10 0x0000557b9a689886 n/a (atom)
                                               #11 0x0000557b9aa3fb06 n/a (atom)
                                               #12 0x0000557b9a932cea n/a (atom)
                                               #13 0x0000557b9a908af0 n/a (atom)
                                               #14 0x0000557b9a91ce89 n/a (atom)
                                               #15 0x0000557b9a8e03c8 n/a (atom)
                                               #16 0x0000557b9ad21f5e n/a (atom)
                                               #17 0x0000557b9ad21db4 n/a (atom)
                                               #18 0x0000557b9ad20cf6 n/a (atom)
                                               #19 0x0000557b9ad1bb07 n/a (atom)
                                               #20 0x0000557b9ad1a095 n/a (atom)
                                               #21 0x0000557b9ad27d15 n/a (atom)
                                               #22 0x0000557b99b24538 n/a (atom)
                                               #23 0x0000557b99b3f130 n/a (atom)
                                               #24 0x0000557b99b3f676 n/a (atom)
                                               #25 0x0000557b99b3f873 n/a (atom)
                                               #26 0x0000557b99b54b9f n/a (atom)
                                               #30 0x0000557b99b404c2 n/a (atom)
                                               #31 0x0000557b99b5b645 n/a (atom)
                                               #32 0x0000557b9c885e18 n/a (atom)
                                               #33 0x0000557b999cd969 n/a (atom)
                                               #34 0x0000557b9adc8475 n/a (atom)
                                               #35 0x0000557b999cbba1 n/a (atom)
                                               #36 0x0000557b97fdd27b n/a (atom)
                                               #38 0x0000557b97fdd02a _start (atom)
                                               #1  0x0000557b99bc68a2 n/a (atom)
                                               #2  0x0000557b99b40171 n/a (atom)
                                               #3  0x0000557b99b5b645 n/a (atom)
                                               #4  0x0000557b99b8f10f n/a (atom)
                                               #5  0x0000557b99bcee17 n/a (atom)
                                               #1  0x0000557b99bdba4a n/a (atom)
                                               #2  0x0000557b99bd93e3 n/a (atom)
                                               #3  0x0000557b99bcc8d2 n/a (atom)
                                               #4  0x0000557b99b5b645 n/a (atom)
                                               #5  0x0000557b99b82f77 n/a (atom)
                                               #6  0x0000557b99b8f10f n/a (atom)
                                               #7  0x0000557b99bcee17 n/a (atom)
                                               #1  0x0000557b99bc68a2 n/a (atom)
                                               #2  0x0000557b99bc6aa1 n/a (atom)
                                               #3  0x0000557b99b7ec18 n/a (atom)
                                               #4  0x0000557b99b7f132 n/a (atom)
                                               #5  0x0000557b99b7ee34 n/a (atom)
                                               #6  0x0000557b99bcee17 n/a (atom)
                                               #1  0x0000557b99bc68a2 n/a (atom)
                                               #2  0x0000557b99bc6aa1 n/a (atom)
                                               #3  0x0000557b99b7ec18 n/a (atom)
                                               #4  0x0000557b99b7f132 n/a (atom)
                                               #5  0x0000557b99b7ee34 n/a (atom)
                                               #6  0x0000557b99bcee17 n/a (atom)
                                               #1  0x0000557b99bdba4a n/a (atom)
                                               #2  0x0000557b99bd93e3 n/a (atom)
                                               #3  0x0000557b99bcc8f0 n/a (atom)
                                               #4  0x0000557b99b5b645 n/a (atom)
                                               #5  0x0000557b99b8f10f n/a (atom)
                                               #6  0x0000557b99bcee17 n/a (atom)
```

### Steps to Reproduce

1. Use Atom 1.41 on Linux for an unspecified amount of time.

**Reproduces how often:**

All the time but cannot say how much use time needs to occur before you see it.

### Versions

1.41

",""
"41","no progress bar / status bar for 3rd party package installation","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

---

Keep in mind that Atom is highly customizable in a number of ways and we strongly prefer that you consider these options before filing this issue:

* https://flight-manual.atom.io/using-atom/sections/basic-customization/: tweak Atom's configuration, styles, and keybindings.
* https://flight-manual.atom.io/using-atom/sections/atom-packages/: install a community package.
* https://flight-manual.atom.io/hacking-atom/: use the Atom API in your init script, to create a package, or to enhance an existing package.

If you're convinced that none of these options are appropriate for the feature you want, please explain why that's the case by completely filling out the issue template below.

Also note that the Atom team has finite resources so it's unlikely that we'll work on feature requests. If we're interested in a particular feature however, we'll follow up and ask you to submit an RFC to talk about it in more detail.

-->

## Summary

<!-- One paragraph explanation of the feature. -->

Add the progress bar where the user can see which package is getting installed and the progress of this like how much it's been done
## Motivation

<!-- Why are we doing this? What use cases does it support? What is the expected outcome? -->
i am  fed up with the one line html code and don't want to use html5print or beautifulsoup to convert the html code in well indent way, just like in python. so thought of using some plugin, found atom-beautify, i have installed it but i was unable to get the progress bar that how much it is being installed and how much time left to install.
so that is why raising this feature
",""
"42","Installing Elm package fails E400","### Steps to Reproduce

1. Install fresh installation of atom
2. Go to the package manager
3. Search for elm
4. Install the package for elm

**Expected behavior:**

Install the package

**Actual behavior:**

Throws an exception {""message"":""Repository inaccessible""}
https://www.atom.io/api/packages/elm/versions/0.1.0/tarball

**Reproduces how often:**

10/10

### Versions

Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

### Additional Information

Mac Os Mojave
",""
"43","Uncaught Error: Cannot call function 'getPosition' on missing remote object 36","[Enter steps to reproduce:]

1. Open folder (was remotely mounted using sshfs)

**Atom**: 1.41.0 x64
**Electron**: 4.2.12
**OS**: ""Arch Linux""
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: Cannot call function 'getPosition' on missing remote object 36

```
At /usr/lib/electron4/resources/electron.asar/renderer/api/remote.js:222

Error: Cannot call function 'getPosition' on missing remote object 36
    at throwRPCError (/usr/lib/electron4/resources/electron.asar/browser/rpc-server.js:148:17)
    at /usr/lib/electron4/resources/electron.asar/browser/rpc-server.js:406:5
    at EventEmitter.ipcMain.on.args (/usr/lib/electron4/resources/electron.asar/browser/rpc-server.js:273:21)
    at EventEmitter.emit (events.js:182:13)
    at WebContents.<anonymous> (/usr/lib/electron4/resources/electron.asar/browser/api/web-contents.js:368:21)
    at WebContents.emit (events.js:182:13)

```

### Commands

```
```

### Non-Core Packages

```
aligner-vhdl 0.1.0 
atom-beautify 0.33.4 
atom-django 0.3.2 
atom-material-syntax 1.0.8 
atom-material-ui 2.1.3 
autocomplete-python 1.16.0 
busy-signal 2.0.1 
django-templates 0.5.0 
file-icons 2.1.36 
highlight-selected 0.16.0 
ide-python 1.5.0 
intentions 1.1.5 
kite 0.174.0 
language-docker 1.1.8 
language-i3wm 0.1.0 
language-vhdl 0.7.2 
linter 2.3.1 
linter-ui-default 1.8.0 
linter-vhdl 1.2.0 
minimap 4.29.9 
minimap-pigments 0.2.2 
pigments 0.40.2 
vhdl-entity-converter 0.9.0 
```

",""
"44","One part of the interface to avoid so much confusion and this repeated question.","I'm having these guys' problem:

https://discuss.atom.io/t/connecting-to-github-in-atom-1-18/45655

https://discuss.atom.io/t/connecting-github-with-atom/50963

As well as the first commenter here:

https://www.youtube.com/watch?v=HqrkEVWBifw

I still haven't figured out how to do this even though I've been a developer for 20 years.  

But look you can avoid these questions that you keep seeing crop up if you just change the interface like this:

The Github tab just says ""No Remotes This repository dos not have any remotes hosted at gitgub.com"".  Just make it say *anything* remotely helpful on how to connect Atom to github.  Because right now absolutely no part of Atom has anything useful on how to do that.  

Even at the bottom you could have the ""No remote"" button be clickable and bring up some kind of explanation.

I'm sorry but this seems so obvious to put into the interface right?

If it has to be done on the CLI, ok sure! But *tell* people that.  

Atom 1.41.0 on Ubuntu 18.04.2",""
"45","When created new folder atom closes ","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [ ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

### Steps to Reproduce

1. <!-- First Step --> Create new folder in huge project
2. <!-- Second Step --> Atom closes
3. <!-- and so onâ€¦ --> The end.

**Expected behavior:**

<!-- What you expect to happen -->

**Actual behavior:**

<!-- What actually happens -->

**Reproduces how often:**

<!-- What percentage of the time does it reproduce? -->

### Versions
1.41.0
Mac OS Catalina 10.15
<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->
",""
"46","Atom blinks and flashes when using the application","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [ X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description
![1](https://user-images.githubusercontent.com/57232629/67976529-a45e2e00-fbec-11e9-9b40-f4f9129e3ceb.png)

Atom flashes when coming back from having the application in the background. The line numbers disappear and there are white flashes across the screen.

### Steps to Reproduce

1. Have Atom open
2. Go use another application (not Atom)
3. Return to Atom and use it

**Expected behavior:**
No flashing, no line numbers disappearing

**Actual behavior:**
Flashes of white and line numbers disappear
**Reproduces how often:**
Mostly (80%)
Some parts of the screen duplicate in other areas
![2](https://user-images.githubusercontent.com/57232629/67985979-63701480-fc00-11e9-8164-9b577e4b8f04.png)
![3](https://user-images.githubusercontent.com/57232629/67985980-6539d800-fc00-11e9-8ee2-40912e562dab.png)



### Versions
Atom    : 1.42.0-beta0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

Atom    : 1.41.0
Electron: 4.2.7
Chrome  : 69.0.3497.128
Node    : 10.11.0

Ubuntu x64 18.04.3",""
"47","Installation Failed Atom 1.41.0","I had some issues with Atom so i uninstalled and then reinstalled and started to get an installation failed error.

I have attached the log

[SquirrelSetup.log](https://github.com/atom/atom/files/3789675/SquirrelSetup.log)
",""
"48","Uncaught Error: dlopen(/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/...","[Enter steps to reproduce:]

1. ...
2. ...

**Atom**: 1.41.0 x64
**Electron**: 4.2.7
**OS**: Mac OS X 10.15
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: dlopen(/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app.asar.unpacked/node_modules/keyboard-layout/build/Release/keyboard-layout-manager.node, 1): image not found

```
At ELECTRON_ASAR.js:160

Error: dlopen(/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app.asar.unpacked/node_modules/keyboard-layout/build/Release/keyboard-layout-manager.node, 1): image not found
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:160:31)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:722:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:169:18)
    at Module.load (internal/modules/cjs/loader.js:602:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:541:12)
    at Function.Module._load (internal/modules/cjs/loader.js:533:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:1:688212)
    at get_KeyboardLayoutManager (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:14:2743819)
    at get_manager (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:14:2743921)
    at Object.getCurrentKeyboardLayout (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:14:2744047)
    at e.keystrokeForKeyboardEvent (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:14:1087018)
    at KeymapManager.keystrokeForKeyboardEvent (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:11:1249633)
    at KeymapManager.handleKeyboardEvent (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:11:1247618)
    at WindowEventHandler.handleDocumentKeyEvent (/private/var/folders/bw/56_pv5vn1rdchd9585kr4dmc0000gn/T/AppTranslocation/B49221B5-FA64-4AA0-B3CF-B695F1A3BE5F/d/Atom.app/Contents/Resources/app/static/<embedded>:11:284598)
```

### Commands

```
     -7:29.9.0 line-ending-selector:show (atom-text-editor.editor.is-focused)
     -7:27.4.0 encoding-selector:show (atom-text-editor.editor.is-focused)
     -7:25.7.0 grammar-selector:show (atom-text-editor.editor.is-focused)
     -6:36.1.0 application:add-project-folder (div.tool-panel.tree-view)
  2x -5:12.2.0 application:new-file (ul.list-inline.tab-bar.inset-panel)
     -0:34.4.0 grammar-selector:show (atom-text-editor.editor)
```

### Non-Core Packages

```

```

",""
"49","Uncaught Error: tunneling socket could not be established, cause=connect ETIMEDOUT 197.98.201.13:...","[Enter steps to reproduce:]

1. Open Atom
2. Attempt to install Minimap from the installer.

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Microsoft Windows 10 Enterprise
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: tunneling socket could not be established, cause=connect ETIMEDOUT 197.98.201.13:10389

```
At internal/streams/legacy.js:57

Error: tunneling socket could not be established, cause=connect ETIMEDOUT 197.98.201.13:10389
    at ClientRequest.onError (/app.asar/node_modules/tunnel-agent/index.js:177:17)
    at Object.onceWrapper (events.js:273:13)
    at ClientRequest.emit (events.js:182:13)
    at Socket.socketErrorListener (_http_client.js:382:9)
    at Socket.emit (events.js:182:13)
    at emitErrorNT (internal/streams/destroy.js:82:8)
    at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)
    at process._tickCallback (internal/process/next_tick.js:63:19)
```

### Commands

```
  2x -0:43.9.0 core:backspace (input.hidden-input)
```

### Non-Core Packages

```
file-icons 2.1.36 
hyperclick 0.1.5 
indent-detective 0.4.0 
ink 0.11.5 
julia-client 0.11.2 
language-julia 0.19.1 
language-weave 0.6.5 
latex-completions 0.3.6 
pdf-view 0.72.0 
tool-bar 1.2.0 
uber-juno 0.3.0 
```

",""
"50","Line number decoration not showing in gutter","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

### Steps to Reproduce

1. open atom in safe mode in every file

**Expected behavior:**

I believe there should be line number decoration for edited lines since opening. (green for added, yellow edited, red deleted). See screenshot at the end from [git diff package](https://github.com/atom/atom/tree/master/packages/git-diff)

**Actual behavior:**

There's absolutely no line number decoration as you can see on this screenshot

I checked every setting I could find in the editor and the flight manual. Nothing is working.

![no decoration](https://github.com/qkzk/data_colab/raw/master/atom_gutter_no_decoration.jpg)

**Reproduces how often:**

Every time

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

**atom version**
~~~
Atom    : 1.40.1
Electron: 4.2.11
Chrome  : 69.0.3497.128
Node    : 10.11.0
~~~

**apm --version**

~~~
apm  2.4.3
npm  6.12.0
node 12.11.1 x64
atom 1.40.1
python 2.7.16
git 2.23.0
~~~

**system info**

~~~
  Operating System: Manjaro Linux
            Kernel: Linux 4.19.79-1-MANJARO
      Architecture: x86-64
~~~

Manjaro is an arch linux based distribution

**atom AUR package used**

~~~
packager : Nicola Squartini 
build 28/09/2019
~~~

### Additional Information

I have never seen those colored line number decoration altrough I've used Atom every day for a long time.

I'm not even sure it's a core feature but I've seen it in many screenshots like the one below so I'm quite confused... If it's not a core feature what should I do ?

![git diff pacakge screenshot](https://camo.githubusercontent.com/9f2171d19869c987271d066087a8357fa80611b3/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3637313337382f323234313531392f30343739316132342d396364362d313165332d396131322d3136346361626538316435382e706e67)
",""
"51","Atom will not start on Catalina -- Needs notarization","Hi! I was taking a quick look at Atom, and I noticed that the current macOS download is not notarized. Notarization is apple's current malware scanning service. There's some information up at https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution

While there are some ways for end users to skip this check, it would be best practice to notarized directly. 

I've gone and notarized the 1.41.0 download (`md5:622281426390b6649dee88807b5a1434`), it passes with the current apple rules. These are set to get a bit stricter in January 2020.

I'm not sure what your build and release process. Perhaps electron or xcode have simple workflows. My usual workflow is something like:
```
xcrun altool --username $APPLEID --password @env:N_PASS --asc-provider $TEAMID --notarize-app --file ~/Downloads/atom-mac.zip  --primary-bundle-id com.github.atom
xcrun altool --username $APPLEID --password @env:N_PASS --asc-provider $TEAMID  --notarization-info $REQUEST_GUUID
staple Atom.app
```
",""
"52","Error opening a file","How big file can be opened by Atom?
It is failing on 500MB trace.
### Prerequisites

* [ ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

### Steps to Reproduce

1. <!-- First Step -->
2. <!-- Second Step -->
3. <!-- and so onâ€¦ -->

**Expected behavior:**

<!-- What you expect to happen -->

**Actual behavior:**

<!-- What actually happens -->

**Reproduces how often:**

<!-- What percentage of the time does it reproduce? -->

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->
",""
"53","Uncaught Error: The module '/usr/share/atom/resources/app.asar.unpacked/node_modules/@atom/fuzzy-...","1. Have open a file.
2. Press CTRL+T

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Ubuntu 18.04.3
**Thrown From**: Atom Core


### Stack Trace

Uncaught Error: The module '/usr/share/atom/resources/app.asar.unpacked/node_modules/@atom/fuzzy-native/build/Release/fuzzy-native.node'
was compiled against a different Node.js version using
NODE_MODULE_VERSION 69. This version of Node.js requires
NODE_MODULE_VERSION 64. Please try re-compiling or re-installing
the module (for instance, using `npm rebuild` or `npm install`).

```
At ELECTRON_ASAR.js:166

Error: The module '/usr/share/atom/resources/app.asar.unpacked/node_modules/@atom/fuzzy-native/build/Release/fuzzy-native.node'
was compiled against a different Node.js version using
NODE_MODULE_VERSION 69. This version of Node.js requires
NODE_MODULE_VERSION 64. Please try re-compiling or re-installing
the module (for instance, using `npm rebuild` or `npm install`).
    at process.module.(anonymous function) [as dlopen] (ELECTRON_ASAR.js:166:20)
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:740:18)
    at Object.module.(anonymous function) [as .node] (ELECTRON_ASAR.js:180:18)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (/usr/share/atom/resources/app/static/<embedded>:11:146745)
    at /app.asar/node_modules/@atom/fuzzy-native/lib/main.js:1:173)
    at /app.asar/node_modules/@atom/fuzzy-native/lib/main.js:3:3)
    at Module.get_Module._compile (/usr/share/atom/resources/app/static/<embedded>:11:147429)
    at Object.value [as .js] (/usr/share/atom/resources/app/static/<embedded>:11:150977)
    at Module.load (internal/modules/cjs/loader.js:620:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:559:12)
    at Function.Module._load (internal/modules/cjs/loader.js:551:3)
    at Module.require (/app.asar/static/index.js:72:46)
    at require (internal/modules/cjs/helpers.js:20:18)
    at customRequire (/usr/share/atom/resources/app/static/<embedded>:1:688157)
    at get_NativeFuzzy (/usr/share/atom/resources/app/static/<embedded>:14:593455)
    at FuzzyFinderView.subscriptions.add.atom.config.observe.e (/usr/share/atom/resources/app/static/<embedded>:14:597479)
    at Config.observeKeyPath (/usr/share/atom/resources/app/static/<embedded>:11:334261)
    at Config.observe (/usr/share/atom/resources/app/static/<embedded>:11:328743)
    at new FuzzyFinderView (/usr/share/atom/resources/app/static/<embedded>:14:597274)
    at new ProjectView (/usr/share/atom/resources/app/static/<embedded>:11:810942)
    at Object.createProjectView (/usr/share/atom/resources/app/static/<embedded>:11:188411)
    at HTMLElement.fuzzy-finder:toggle-file-finder (/usr/share/atom/resources/app/static/<embedded>:11:186909)
    at CommandRegistry.handleCommandEvent (/usr/share/atom/resources/app/static/<embedded>:11:349123)
    at KeymapManager.dispatchCommandEvent (/usr/share/atom/resources/app/static/<embedded>:11:1249835)
    at KeymapManager.handleKeyboardEvent (/usr/share/atom/resources/app/static/<embedded>:11:1245969)
    at WindowEventHandler.handleDocumentKeyEvent (/usr/share/atom/resources/app/static/<embedded>:11:284329)
```

### Commands

```
  2x -9:51.7.0 editor:newline (input.hidden-input)
     -9:51.4.0 core:move-up (input.hidden-input)
     -9:47.3.0 intentions:highlight (input.hidden-input)
     -9:47.1.0 editor:delete-to-beginning-of-word (input.hidden-input)
     -9:46.7.0 editor:select-line (input.hidden-input)
     -9:46.4.0 core:backspace (input.hidden-input)
     -9:46 intentions:highlight (input.hidden-input)
     -9:45.9.0 core:save (input.hidden-input)
     -2:26.8.0 fuzzy-finder:toggle-file-finder (input.hidden-input)
```

### Non-Core Packages

```
atom-language-r 1.4.8 
busy-signal 2.0.1 
intentions 1.1.5 
language-latex 1.2.0 
language-matlab 0.2.1 
latex 0.50.2 
latex-wordcount 0.6.0 
linter 2.3.1 
linter-chktex 1.4.0 
linter-gcc 0.7.1 
linter-pycodestyle 2.1.3 
linter-shellcheck 1.6.0 
linter-spell 0.15.0 
linter-spell-latex 0.11.0 
linter-ui-default 1.8.0 
minimap 4.29.9 
minimap-cursorline 0.2.0 
minimap-find-and-replace 4.5.2 
minimap-linter 2.2.1 
pdf-view 0.72.0 
todo-show 2.3.2 
wordcount 3.1.0 
```

",""
"54","Uncaught TypeError: Cannot read property 'text' of null","[Enter steps to reproduce:]

Not sure exactly - was editing a JSX file and my `.eslintrc` and the explosion happened somewhere around me saving one of them. Submitting this in case it's helpful, sorry I don't have a better repro scenario. 

**Atom**: 1.40.1 x64
**Electron**: 3.1.10
**OS**: Mac OS X 10.14.6
**Thrown From**: Atom Core


### Stack Trace

Uncaught TypeError: Cannot read property 'text' of null

```
At /Applications/Atom.app/Contents/Resources/app/static/<embedded>:11

TypeError: Cannot read property 'text' of null
    at TreeSitterLanguageMode.tokenForPosition (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:3204186)
    at TextEditor.tokenForBufferPosition (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:45164)
    at Object.linkAtPosition (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:206521)
    at Object.linkUnderCursor (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:206392)
    at Object.openLink (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:206043)
    at HTMLElement.commandDisposable.atom.commands.add (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:205898)
    at CommandRegistry.handleCommandEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:349123)
    at KeymapManager.dispatchCommandEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1249835)
    at KeymapManager.handleKeyboardEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:1245969)
    at WindowEventHandler.handleDocumentKeyEvent (/Applications/Atom.app/Contents/Resources/app/static/<embedded>:11:284329)
```

### Commands

```
     -0:16.9.0 editor:move-to-end-of-screen-line (input.hidden-input)
     -0:16.5.0 editor:newline (input.hidden-input)
     -0:16.3.0 core:paste (input.hidden-input)
     -0:15.5.0 editor:move-to-beginning-of-line (input.hidden-input)
     -0:15.3.0 intentions:highlight (input.hidden-input)
     -0:15.3.0 editor:move-to-end-of-word (input.hidden-input)
     -0:14.9.0 intentions:highlight (input.hidden-input)
     -0:14.9.0 editor:move-to-beginning-of-word (input.hidden-input)
  2x -0:14.4.0 editor:move-to-end-of-screen-line (input.hidden-input)
     -0:09.7.0 core:move-up (input.hidden-input)
     -0:09.5.0 core:move-down (input.hidden-input)
     -0:09.1.0 core:save (input.hidden-input)
     -0:08.4.0 window:focus-next-pane (input.hidden-input)
     -0:08.0 editor:move-to-beginning-of-line (input.hidden-input)
  2x -0:07.8.0 emacs-plus:kill-line (input.hidden-input)
     -0:07.4.0 core:save (input.hidden-input)
```

### Non-Core Packages

```
advanced-open-file 0.16.8 
atom-build-yarn 0.1.0 
atom-ide-ui 0.13.0 
autocomplete-python-jedi 1.10.3-0 
build 0.70.0 
build-cargo 2.0.0 
build-npm-apm 0.12.0 
busy 0.7.0 
busy-signal 2.0.1 
clipboard-plus 0.5.1 
emacs-plus 0.12.0 
file-icons 2.1.35 
fonts 3.9.0 
git-blame 1.8.0 
git-plus 8.7.1 
Hydrogen undefined 
hyperclick 0.1.5 
ide-rust 0.21.0 
intentions 1.1.5 
js-hyperclick 1.13.3 
language-babel 2.85.0 
language-docker 1.1.8 
language-erlang 3.2.0 
language-glsl 2.0.4 
language-gradle 0.1.0 
language-groovy 0.7.0 
last-cursor-position 0.9.3 
line-diff-details 1.9.0 
linter 2.3.1 
linter-eslint 8.5.5 
linter-flake8 2.4.0 
linter-flow 5.6.1 
linter-htmlhint 1.6.2 
linter-rust 1.0.1 
linter-scss-lint 3.2.1 
linter-shellcheck 1.6.0 
linter-tidy 2.4.0 
linter-ui-default 1.8.0 
local-history 4.3.1 
org-mode 0.3.16 
pigments 0.40.2 
prettier-atom 0.57.3 
python-tools 0.6.9 
racer 0.20.0 
react 0.18.0 
ssh-config 0.14.0 
tablr 1.8.3 
toggle-gutter 0.3.4 
travis-ci-status 1.3.1 
```

",""
"55","White line at the top of Atom app (macOS)","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

The Electron app on macOS still has a white top border which is widely discussed and fixed in Electron's community https://github.com/electron/electron/issues/13164 It should not be there since Catalina. 

### Steps to Reproduce

The border is hidden only in fullscreen mode. Otherwise you see it all the time.

<img width=""1280"" alt=""Ð¡Ð½Ð¸Ð¼Ð¾Ðº Ñ?ÐºÑ€Ð°Ð½Ð° 2019-10-24 Ð² 14 57 55"" src=""https://user-images.githubusercontent.com/43918077/67483562-bda42f00-f66e-11e9-8fb4-4590dc06822e.png"">

**Expected behavior:**

There should be no white border.

### Additional information

This might help to resolve the issue https://electronjs.org/docs/api/frameless-window

### Versions

Atom 1.41.0
macOS 10.5",""
"56","Difference between being ready for usage and what timecop says","Timecop looks good in my opinion:
![image](https://user-images.githubusercontent.com/5960902/67471899-8161d600-f650-11e9-8d34-64278529d014.png)
A single second is quite nice for a texteditor with these capabilities.
Though, from starting the app (click on its icon) until the UI and syntax highlighting are loaded (no icons missing etc) roughly 4 seconds pass. At the same time I get a spike in WLAN usage:
![image](https://user-images.githubusercontent.com/5960902/67472355-42805000-f651-11e9-9f5c-7344ddc61c8f.png)
The vertical line spacing corresponds to 3s. The left edge of the spike was approximately 0.8 seconds after clicking the icon and the right edge of the spike was about 2.3 seconds after the UI was up. I guess delaying almost everything (e.g. internet access) except UI and syntax highlighting until the basic text editor is up and running would reduce the perceived startup time of Atom substantially. I.e. the gap between timecop measures and perceived speed. Are there any flags to check whether that'd help myself?",""
"57","Incredibly long Shell/Window load time ","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description
Atom is starting incredibly slowly. Timecop says Shell/Window load time are taking >4000ms each
### Steps to Reproduce

1. Launch Atom
2. Take a nap, do exercise
3. Finally open, check Timecop for timings

**Expected behavior:**
Load times < 1000ms
**Actual behavior:**
Load times > 4000ms
**Reproduces how often:**
Every time
### Versions
```atom --version``` doesn't do anything and 
I have no idea where my apm is
Help>About says that I am running v1.40.1

OS Name: Windows 10 Home 
OS Version: 10.0.17763
Processor: Intel Core i7-7700HQ
RAM: 16GB 

### Additional Information
I also renamed ~/.atom and did a few restarts, did also use Atom Beta. Nothing changed.",""
"58","Atom interferes with Skype on Ubuntu?","* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description
There seems to be a problem between Atom and Skype when using both in Ubuntu. I am not sure who is the troublemaker, so I posted the issue also on Skype: https://answers.microsoft.com/en-us/skype/forum/sk_acc-sk_settings-sk_linux/skype-founds-no-devices-when-atom-editor-is-open/6465d2a1-032d-4045-ac18-b374e4e81323?tm=1570001341665

When I start Skype while the Atom editor is open, then Skype does not find speaker, microphone nor camera device:
![image](https://user-images.githubusercontent.com/1765602/66024445-28d96600-e4f4-11e9-9a1b-a3217bd3e125.png)

When I start Skype and the Atom editor is closed, all devices are found:
![image](https://user-images.githubusercontent.com/1765602/66024530-64743000-e4f4-11e9-89a3-07114386d9d0.png)

If I open the Atom editor while Skype is active, the devices still remain and I may continue using Skype.


### Steps to Reproduce

1. Start Atom Editor
2. Start Skype
3. Check Tools -> Audio & Video Setting

**Expected behavior:**

Expect Skype to find devices

**Actual behavior:**

Skype does not find any defices

**Reproduces how often:**

100 %

### Versions

I am using Ubuntu 18.04 and the latest version of Atom 1.40.1

### Additional Information

I am using Skype to communicate with remote developer (sharing screen etc.). So I usually had Atom open and it was very confusing to me that my speaker and microphone were disabled. I know that there is a Chrome Skype Browser Extension, but this does not let you share a single screen, only both at the same time, making it very tiny for the person on the other end. I am glad I found a workaround now (first open Skype, then Atom), but if this issue is caused by Atom, then I think a fix would be good for people having a similar issue.

### Life example:
![Screencast 2019-10-02 08_50_51](https://user-images.githubusercontent.com/1765602/66046595-622ac980-e526-11e9-9384-a077f9763b4a.gif)


",""
"59","Previously automatically-saved state dialog even in safe mode.","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [ x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

Hello,

This happens only on my laptop (which might be snappier than my desktop)

My workplace uses a homegrown SCM.
So there might be other files in the directory I do not know about.
If you guys give me ideas on how to enable logging perhaps there are files I can clean before opening the directory again.

I constantly open atom in a directory.
I even have an alias (doskey) a. to do it quickly.

Even in safe mode.
atom --safe . it pops this dialog.
![image](https://user-images.githubusercontent.com/1906839/65684269-3773d900-e02d-11e9-85dd-ed4b07ff5879.png)

I did search for this issue and found this locked issue so I am opening a fresh bug.
https://github.com/atom/atom/issues/14968
Because that one is locked.

I found this Discuss...topic...
https://discuss.atom.io/t/previous-automatically-saved-project-state-detected-comes-up-every-time/43051
But apm update did not do anything for the problem.

### Steps to Reproduce

1. Save a file in the directory.
2. Close Atom.
3. Open Atom again.

**Expected behavior:**
It just opens the directory.

**Actual behavior:**
The dialog happens and I choose 
Open window with state.
And I have to close the other atom window.

**Reproduces how often:**
100%

### Versions

e:\WS\CBU1_2019x_lap_welcome>atom --version

Atom    : 1.40.1
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0

e:\WS\CBU1_2019x_lap_welcome>apm --version
apm  2.4.3
npm  6.2.0
node 10.2.1 x64
atom 1.40.1
python 2.7.16
git 2.23.0.windows.1
visual studio

### Additional Information

e:\WS\CBU1_2019x_lap_welcome>apm update
Package Updates Available (0)
â””â”€â”€ (empty)

e:\WS\CBU1_2019x_lap_welcome>a.

e:\WS\CBU1_2019x_lap_welcome>apm links
C:\Users\cbu1\.atom\dev\packages (0)
â””â”€â”€ (no links)
C:\Users\cbu1\.atom\packages (0)
â””â”€â”€ (no links)

",""
"60","Undo/redo leaks memory","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

<!-- Description of the issue -->

When using the editor over longer periods of time (like over the duration of a few days), doing various undoable actions, I'll sometimes build up upwards of 1GB of memory used, almost always related to undo/redo. This occurs even when all I'm doing is dealing with Markdown files. I have no community package that affects autocomplete or anything related besides syntax highlighting in Markdown files.

Killing ""Atom Helper"" to kill the window process and then restarting that process fixes the memory leak.

<details>
<summary>Here's a list of packages I have enabled:</summary>

- atom-beautify@0.33.4
- auto-detect-indentation@1.3.0
- autocomplete-paths@2.12.2
- autocomplete-racer@0.1.3
- build-cargo@2.0.0
- busy-signal@2.0.1
- color-picker@2.3.0
- docblockr@0.13.7
- editorconfig@2.5.0
- file-icons@2.1.35
- git-plus@8.7.1
- intentions@1.1.5
- language-babel@2.85.0
- language-batch@0.4.0
- language-elixir@0.22.1
- language-erlang@3.2.0
- language-haskell@1.19.1
- language-kotlin@0.5.0
- language-livescript@0.0.3
- language-lua@0.9.11
- language-ocaml@1.9.5
- language-pegjs@0.5.0
- language-pug@0.0.22
- language-rust@0.4.12
- language-scala@1.1.10
- language-stylus@0.2.0
- language-vue@0.25.0
- language-webassembly@1.0.1
- language-x86-64-assembly@2.2.11
- linter@2.3.1
- linter-eslint@8.5.5
- linter-shellcheck@1.6.0
- linter-tslint@1.10.28
- linter-ui-default@1.8.0
- minimap@4.29.9
- minimap-cursorline@0.2.0
- minimap-git-diff@4.3.1
- minimap-linter@2.2.1
- project-manager@3.3.7
- sort-lines@0.19.0
- sync-settings@0.8.6

As you can see, none of these should affect Markdown. I've already disabled most of the worst offenders.
</details>

In a prior version (1.36 IIRC), I've verified this in safe mode, and the symptom has persisted ever since.

### Steps to Reproduce

1. Open a file, even a text file
2. Make thousands of edits to it, optionally saving.
3. Close the file.

It takes long enough it's not a quick repro. It's also why I haven't repro'd it in safe mode recently - I *really* don't feel like spending well over a day in safe mode just waiting on it to build up.

**Expected behavior:**

<!-- What you expect to happen -->
Memory usage to remain reasonable.

**Actual behavior:**

<!-- What actually happens -->
Memory usage grows up to 500MB-1GB range, and doesn't release on close.

**Reproduces how often:**

<!-- What percentage of the time does it reproduce? -->
100% of the time for me. I literally have been keeping Activity Monitor up just to periodically kill it to reclaim the memory leaked.

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->

```
$ atom --version
Atom    : 1.40.1
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0

$ apm --version
apm  2.4.3
npm  6.2.0
node 10.2.1 x64
atom 1.40.1
python 2.7.10
git 2.17.2
```

I've reproduced this in safe mode around 1.36, although I haven't tried since.

My OS is macOS High Sierra 10.13.6, 64-bit.

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->

Recently, I've been suffering OS crashes and performance issues, likely due to something Chromium-related, but I've not had the time to debug that. This has turned my OOM crashes of Atom to OOM kernel panics, but the basic symptom is the same. I know it's likely separate since opening a new second window freezes my machine 50% of the time, 90% if I have a second browser window open. Also, startup time has become absolutely atrocious now, in the 2-3 minute range for just the limited set of plugins I've listed above. But I do feel this has *some* limited relevance to this bug, hence why I listed it.",""
"61","Atom 1.40.1 starts infinite copies of itself (fork bomb!)","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

When I restarted atom today (I think it was just upgraded?) It started to create infinite copies of itself stacked on top of each other to the point my computer was unusable. I'd restart my computer and atom would do the same thing. Finally I was able to ssh into my own computer and remove the atom package so it couldn't start and from there I was able to experiment a bit. I tried starting it with `--clear-window-state` and with `--safe`, but I saw the same fork-bomb behavior.

Finally, I moved my `~/.atom` dir to `~/.atom-backup` and then atom was able to start successfully. I copied the `packages` dir back to the new `~/.atom` and started fresh. I still have a copy of that backup dir in case it would be helpful to reproduce the bug.



### Steps to Reproduce

1. Upgrade to atom 1.40.1
2. (re)Start atom
3. Be ready to `killall atom` a few times!

**Expected behavior:**

Atom should not fork-bomb

**Actual behavior:**

Atom fork-bombs

**Reproduces how often:**

100%

### Versions

<!-- You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running. -->
```
$ atom --version
Atom    : 1.40.1
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0
$ apm --version
apm  2.4.3
npm  6.2.0
node 10.2.1 x64
atom 1.40.1
python 2.7.12
git 2.7.4
$ lsb_release -a
LSB Version:	core-9.20160110ubuntu0.2-amd64:core-9.20160110ubuntu0.2-noarch:printing-9.20160110ubuntu0.2-amd64:printing-9.20160110ubuntu0.2-noarch:security-9.20160110ubuntu0.2-amd64:security-9.20160110ubuntu0.2-noarch
Distributor ID:	Ubuntu
Description:	Ubuntu 16.04.5 LTS
Release:	16.04
Codename:	xenial
```

### Additional Information

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->
",""
"62","Atom eats up nearly all the RAM before releasing it some minutes later","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

I noticed that, in some cases (see ""Steps to reproduce""), Atom uses a lot of RAM and makes other processes nearly crashing. After a couple minutes, RAM is being freed and everything goes back to normal.

### Steps to Reproduce

1. Open editor
2. Add more than one file at a time (practical example: an Atom package I'm working on allowing to restore a saved tabs session, 10 files loaded)
OR

2. Add a file greater than 10MB (practical example: the performance profile I took out of the problem) 

**Expected behavior:**

Atom loads the file in not more than 2 minutes, with a normal use of the RAM equivalent to the loaded file(s) size, or at least a little more

**Actual behavior:**

Atom takes a lot of time to load (more than 5 minutes), fills progressively the RAM almost entirely, causing all the other processes to nearly crash and the whole system to hang during this time, then releases it all of a sudden and stabilize.

**Reproduces how often:**

Happens everytime the steps to reproduce are applied.

### Versions

Atom    : 1.40.1
Electron: 3.1.10
Chrome  : 66.0.3359.181
Node    : 10.2.0
OS: Windows 7 Family Edition Premium (64 bits)
Relevant specs: 8GB RAM __DDR3 (from memory)__, Intel Pentium G2020 CPU

### Additional Information

Syntactical coloration might be the reason of the lack of performance, but I don't think it's what trigger the sudden filling of RAM.
I can eventually provide a profiling of what happens in the first case.
",""
"63","Error when installing Godot code support","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

I can not install the package lang-gdscript.

**Error message:**
```
> tree-sitter-gdscript@0.2.3 install /tmp/apm-install-dir-119725-15300-wyjp48.qkzu/node_modules/lang-gdscript/node_modules/tree-sitter-gdscript
> prebuild-install || node-gyp rebuild


prebuild-install WARN install No prebuilt binaries found (target=3.1.10 runtime=electron arch=x64 libc= platform=linux)
Aborted (core dumped)
Aborted (core dumped)
gyp: Call to 'node -e ""require('nan')""' returned exit status 134 while in binding.gyp. while trying to load binding.gyp
gyp ERR! configure error 
gyp ERR! stack Error: `gyp` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onCpExit (/usr/share/atom/resources/app/apm/node_modules/npm/node_modules/node-gyp/lib/configure.js:345:16)
gyp ERR! stack     at ChildProcess.emit (events.js:182:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:237:12)
gyp ERR! System Linux 5.0.0-25-generic
gyp ERR! command ""/usr/share/atom/resources/app/apm/bin/node"" ""/usr/share/atom/resources/app/apm/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /tmp/apm-install-dir-119725-15300-wyjp48.qkzu/node_modules/lang-gdscript/node_modules/tree-sitter-gdscript
gyp ERR! node -v v10.2.1
gyp ERR! node-gyp -v v3.7.0
gyp ERR! not ok 
Aborted (core dumped)
npm WARN enoent ENOENT: no such file or directory, open '/tmp/apm-install-dir-119725-15300-wyjp48.qkzu/package.json'
npm WARN apm-install-dir-119725-15300-wyjp48.qkzu No description
npm WARN apm-install-dir-119725-15300-wyjp48.qkzu No repository field.
npm WARN apm-install-dir-119725-15300-wyjp48.qkzu No README data
npm WARN apm-install-dir-119725-15300-wyjp48.qkzu No license field.

npm ERR! code ELIFECYCLE
npm ERR! errno 134
npm ERR! tree-sitter-gdscript@0.2.3 install: `prebuild-install || node-gyp rebuild`
npm ERR! Exit status 134
npm ERR! 
npm ERR! Failed at the tree-sitter-gdscript@0.2.3 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/<user>/.atom/.apm/_logs/2019-08-25T16_39_35_655Z-debug.log
```

### Steps to Reproduce:
- Clicked install in lang-gdscript extension.

**Expected behavior:**
Sucessful install.
<!-- What you expect to happen -->

**Actual behavior:**
Error (not installing).
",""
"64","Issue Using Keyboard Macros","I use iCUE software to create keyboard macros related to working to LaTeX in atom and have had an issue with a macro (using the prnt screen key) that produces the following:

_\begin{itemize}
    \item
\end{itemize}_

The macro works fine in every programming, however in atom the output of the macro changes at random. Here is a gif that shows the issue when I press the macro key (you can see it works the first two times but not the next two):

![Atom Issue (0)](https://user-images.githubusercontent.com/40768692/62695678-25f15600-ba1a-11e9-905d-579e618717c1.gif)

",""
"65","Vietnamese language display error with some specific chars.","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

A few Vietnamese chars have display issues although the font has support Vietnamese.

### Steps to Reproduce

1. Open `atom`
2. New file
3. Type or paste: `áº¿, á»?, á»ƒ, á»“, á»ƒ, á»?, á»Ÿ, ...` and type `Ã¨ Ã©, áº½, Æ°, Ã´, Ãª, á»«, á»©, ...` to compare.

<img width=""504"" alt=""Screen Shot 2019-07-07 at 7 23 39 AM"" src=""https://user-images.githubusercontent.com/12815768/60762357-2f3c7b00-a088-11e9-8ce6-089d3cea1685.png"">


**Expected behavior:**

Show normally

**Actual behavior:**

Text displayed as font errors.

**Reproduces how often:**

Always.

### Versions

```
Atom    : 1.38.2
Electron: 2.0.18
Chrome  : 61.0.3163.100
Node    : 8.9.3
```

### Additional Information

Nothing.
",""
"66","Settings -> Install page fails to open","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/.github/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

Install does not work when on fresh install under WSL/Ubuntu/VcXsrv/LXDE

### Steps to Reproduce

1. Install Atom under WSL/Ubuntu/VcXsrv/LXDE environment

<!-- What you expect to happen -->

Can navigate to Install page of settings


<!-- What actually happens -->

Cannot navigate to install page of settings, error thrown

<!-- What percentage of the time does it reproduce? -->
100% of the time

### Versions

**Atom**: 1.26.1 x64
**Electron**: 1.7.11
**OS**: Ubuntu 18.04.2
**Thrown From**: Atom Core

### Additional Information


Error: 

Given:
1.Run WSL (Windows Serving Linux) with Ubuntu using VcXsrv (portable version)
3. Run LXDE
4. Fresh Install of Atom
5. Go to Settings
6. Click Install
Expected:
Package install page appears
Actual:
Error flashes, and install page is not navigated to.


### Stack Trace

Uncaught TypeError: undefined is not a function

```
At /opt/atom/resources/app/node_modules/settings-view/lib/install-panel.js:385

TypeError: undefined is not a function
    at InstallPanel.addPackageViews (/opt/atom/resources/app/node_modules/settings-view/lib/install-panel.js:385:30)
    at /opt/atom/resources/app/node_modules/settings-view/lib/install-panel.js:456:26
    at /opt/atom/resources/app/node_modules/settings-view/lib/atom-io-client.js:68:26
    at AtomIoClient.module.exports.AtomIoClient.fetchFromCache (/opt/atom/resources/app/node_modules/settings-view/lib/atom-io-client.js:159:22)
    at AtomIoClient.module.exports.AtomIoClient.featuredPackages (/opt/atom/resources/app/node_modules/settings-view/lib/atom-io-client.js:65:25)
    at InstallPanel.loadFeaturedPackages (/opt/atom/resources/app/node_modules/settings-view/lib/install-panel.js:450:27)
    at new InstallPanel (/opt/atom/resources/app/node_modules/settings-view/lib/install-panel.js:124:16)
    at /opt/atom/resources/app/node_modules/settings-view/lib/settings-view.js:247:22
    at SettingsView.getOrCreatePanel (/opt/atom/resources/app/node_modules/settings-view/lib/settings-view.js:371:25)
    at SettingsView.showPanel (/opt/atom/resources/app/node_modules/settings-view/lib/settings-view.js:429:30)
    at HTMLDivElement.clickHandler (/opt/atom/resources/app/node_modules/settings-view/lib/settings-view.js:190:24)
```

### Commands
Click +INSTALL in the settings menu

### Non-Core Packages

None


",""
"67","Create issue button not working: ERR_INSECURE_RESPONSE","### Prerequisites

* [X ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: <https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode>
    * Followed all applicable steps in the debugging guide: <https://flight-manual.atom.io/hacking-atom/sections/debugging/>
    * Checked the FAQs on the message board for common solutions: <https://discuss.atom.io/c/faq>
    * Checked that your issue isn't already filed: <https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom>
    * Checked that there is not already an Atom package that provides the described functionality: <https://atom.io/packages>

### Description

""Create issue on atom/atom"" button does not work

### Steps to Reproduce

1. Produce an error, e.g. (atom/tree-view#1282):
  1a. create a file with a comma in its name
  1b. drag it in the tree view to a different folder
2. In the dialog that opens, click ""Create issue on atom/atom"" 

No browser window is opened. Console (ctrl+shift+i) shows two new errors:
```
POST https://is.gd/create.php?format=simple net::ERR_INSECURE_RESPONSE
```
and
```
Uncaught (in promise) TypeError: Error processing argument at index 0, conversion failure from null
    at C:\Users\sternlab\AppData\Local\atom\app-1.38.2\resources\app\static\<embedded>:11:905732
    at <anonymous>
```

**Reproduces how often:**

Always

### Versions

Atom    : 1.38.2
Electron: 2.0.18
Chrome  : 61.0.3163.100
Node    : 8.9.3
Windows 10
",""
"68","Fail to generate an Atom build in Ubuntu 19.04 64bit","I have created a new fork of the repository for Atom 1.40.0-dev. Following these [instructions](https://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux) for generating an Atom build, I have run â€œscript/bootstrapâ€? in order to install all required dependencies.

When trying to generate the Atom build using a Linux 19.04 64bit enabled computer by executing the â€œscript/buildâ€?, I am getting an error message in the terminal when the building process stops. The error message is the following:

```
Node:	v10.16.0
Npm:	v6.2.0
Installing script dependencies
Installing apm
apm  2.3.1
npm  6.2.0
node 10.2.1 x64
atom unknown
python 2.7.16
git 2.20.1
Installing modules âœ“
Wrote Dependencies Fingerprint: /home/dev-xr/gitprojects/atom/node_modules/.dependencies-fingerprint cbfce05d767b0c926487b711109ed54461b24ed0
Cleaning /home/dev-xr/gitprojects/atom/out
Copying assets to /home/dev-xr/gitprojects/atom/out/app
Transpiling packages with custom transpiler configurations in /home/dev-xr/gitprojects/atom/out/app
 transpiling for package github
Installing modules âœ—
> superstring@2.3.6 install /home/dev-xr/gitprojects/atom/node_modules/github/node_modules/superstring
> node-gyp rebuild


Aborted (core dumped)
gyp: Call to 'node -e ""require('nan')""' returned exit status 134 while in binding.gyp. while trying to load binding.gyp
gyp ERR! configure error
gyp ERR! stack Error: `gyp` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onCpExit (/home/dev-xr/gitprojects/atom/apm/node_modules/atom-package-manager/node_modules/npm/node_modules/node-gyp/lib/configure.js:345:16)
gyp ERR! stack     at ChildProcess.emit (events.js:182:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:237:12)
gyp ERR! System Linux 5.0.0-17-generic
gyp ERR! command ""/home/dev-xr/gitprojects/atom/apm/node_modules/atom-package-manager/bin/node"" ""/home/dev-xr/gitprojects/atom/apm/node_modules/atom-package-manager/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js"" ""rebuild""
gyp ERR! cwd /home/dev-xr/gitprojects/atom/node_modules/github/node_modules/superstring
gyp ERR! node -v v10.2.1
gyp ERR! node-gyp -v v3.7.0
gyp ERR! not ok
Aborted (core dumped)
npm ERR! code ELIFECYCLE
npm ERR! errno 134
npm ERR! superstring@2.3.6 install: `node-gyp rebuild`
npm ERR! Exit status 134
npm ERR!
npm ERR! Failed at the superstring@2.3.6 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/dev-xr/.atom/.apm/_logs/2019-06-18T20_30_29_748Z-debug.log
child_process.js:650
    throw err;
    ^

Error: Command failed: /home/dev-xr/gitprojects/atom/apm/node_modules/atom-package-manager/bin/apm install
  at checkExecSyncError (child_process.js:629:11)
  at Object.execFileSync (child_process.js:647:13)
  at module.exports (/home/dev-xr/gitprojects/atom/script/lib/run-apm-install.js:14:16)
  at module.exports (/home/dev-xr/gitprojects/atom/script/lib/transpile-packages-with-custom-transpiler-paths.js:44:7)
  at Object.<anonymous> (/home/dev-xr/gitprojects/atom/script/build:74:3)
  at Module._compile (internal/modules/cjs/loader.js:776:30)
  at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)
  at Module.load (internal/modules/cjs/loader.js:653:32)
  at tryModuleLoad (internal/modules/cjs/loader.js:593:12)
  at Function.Module._load (internal/modules/cjs/loader.js:585:3)
  at Function.Module.runMain (internal/modules/cjs/loader.js:829:12)
  at startup (internal/bootstrap/node.js:283:19)
  at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)
```
I have been doing research about this issue and found this issue [#15203](https://github.com/atom/atom/issues/15203), where a very similar problem is described.

The issue got comments suggesting that the clang-3.3 package should be installed in order to fix the issue, nevertheless, because of the Ubuntu version I am using didnâ€™t allow me to install that clang version so I had to install the clang-8.0 package. The clang package version (8.0)  was updated in the .travis.yml file in the local Atom project.

The build generation process was run again with the above-mentioned changes applied, but the error persists.

Alternatively, before running the building process I manually, and separately, installed the nodejs *superstring* package, which is described in the previously shared error message I got. For this, I executed `npm install superstring@2.3.6`. I did this in order to define if the dependency installed separately works when running the building process. But the results were also unsuccessful.

Would anyone have experienced a problem similar to this and has suggestions on how to solve it?
",""
"69","TextMate Grammar scope specifications with multiple scopes is incorrectly handled","### Prerequisites

* [ ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

If a TextMate grammar scope specifier (`name` or `contentName`) specifies multiple scopes, they are not correctly handled, and thus highlighting fails.

![image](https://user-images.githubusercontent.com/26179051/58852662-09712000-865d-11e9-9920-6fba209631ad.png)

The above image shows a region which should have 6 scopes, but three of them are specified on a single specification, and so they appear as a single scope.

In addition to highlighting failing, automated tests using `atom-grammar-test` also fail.

The scope specifier in the grammar file is just the list of scopes separated with spaces.

I know VSCode-TextMate explicitly accepts this, as I have seen the code that makes sure to break up the specification list at the spaces, and so my grammar file works correctly in VS Code.  I am certain I saw this in another textmate grammar file, and given enough time I will find it.

(VS Code, same grammar file)
![image](https://user-images.githubusercontent.com/26179051/58853078-9c5e8a00-865e-11e9-986d-f7bfd8d050e5.png)

I'll get a link posted to the grammar file in question, if its needed.  These specific changes are not yet posted online.

(snippet of one repository item)
```CSON
	interpolation:
		begin: ""(\\$)(\\()""
		beginCaptures:
			""1"":
				name: ""keyword.other.substatement.powershell punctuation.definition.substatement.powershell punctuation.section.embedded.substatement.begin.powershell""
			""2"":
				name: ""punctuation.section.group.begin.powershell punctuation.section.embedded.substatement.begin.powershell""
		contentName: ""interpolated.complex.source.powershell""
		end: ""\\)""
		endCaptures:
			""0"":
				name: ""punctuation.section.group.end.powershell punctuation.section.embedded.substatement.end.powershell""
		name: ""meta.embedded.substatement.powershell""
		patterns: [
			{
				include: ""$self""
			}
		]
```

The purpose of these multiple scopes to that there are alternate ideas as to how the content should be scoped and themed, and this is the best to support them all.  The last scope in the specification would have the highest priority if the theme has a selection for it.

### Versions

Atom    : 1.37.0
Electron: 2.0.18
Chrome  : 61.0.3163.100
Node    : 8.9.3

Windows 10 1903 18908
",""
"70","We should reuse the electron-link cache between builds on Azure DevOps","When building Atom, we [generate a v8 startup snapshot](https://github.com/atom/atom/blob/1edf94a24032a8a0e555c3db7aa7de01e5b00633/script/lib/generate-startup-snapshot.js) by transforming every source file in the code base and concatenating them all into one giant `startup.js` script. I don't have exact timings, but this takes a decent percentage of the 10 minutes we spend on the `Build Atom` step of every build on every platform.

The `electron-link` tool includes a caching facility, which skips transformation of any file that hasn't changed. If we could take advantage of that on Azure Pipelines, we'd save a significant chunk of time on every build.

@jasonrudolph co-authored this issue.

cc @daviwil ",""
"71","Atom environment accessible from the main process","Turns out that the main process has access to the `atom` global variable and there are some usages of it across the codebase (which are unreliable since the environment available in the main process has the state of the snapshot).

List of identified usages:

* `path-watcher.js`
  * https://github.com/atom/atom/blob/master/src/path-watcher.js#L185
  * https://github.com/atom/atom/blob/master/src/path-watcher.js#L223
  * https://github.com/atom/atom/blob/master/src/path-watcher.js#L232
  * https://github.com/atom/atom/blob/master/src/path-watcher.js#L547-L548
* `atom-application.js`
  * https://github.com/atom/atom/blob/master/src/main-process/atom-application.js#L33
  * https://github.com/atom/atom/blob/master/src/main-process/atom-application.js#L37

As [discussed in Slack](https://github.slack.com/archives/G2LCNPXBP/p1557406371287600), we should remove all usages of the `atom` global object from the main renderer, and then remove that global object from it in order to avoid relying on it in the future.

To find all potential usage, we can add a big warning every time the `atom` object is accessed by creating some kind of interceptor at the startup of the main process:

```js
const originalAtom = global.atom

Object.defineProperty(global, 'atom', {
  get() {
    console.error('Warning! Using the global atom variable from the main process')
    console.trace()
    return originalAtom
  }```",""
"72","Opening file causes system to lock for ~10 seconds on Ubuntu 19.04","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following: [snip]

### Description

After upgrading from Ubuntu 18.10 to 19.04, certain simple operations in Atom cause the system to lock/hang for up to 10 seconds.

### Steps to Reproduce

1. Open `atom-beta --safe`.
2. Open a small text file (Ctrl+O).

**Expected behavior:** The file opens more or less instantly and is available for editing. This was the behaviour under Ubuntu 18.10.

**Actual behavior:**
- Keyboard input locks and the screen (including other visible windows) freezes for about 10 seconds. 
- The mouse cursor is movable if under the default Ubuntu `gdm3` session; or also locks if under the Ubuntu Wayland session.
- `gnome-shell` CPU usage (from `top` or `htop`) spikes to 100% and settles back to a low value after the screen unfreezes.
- The lock is usually long enough that Ubuntu/Gnome/apport offers to kill Atom after the screen unfreezes.

**Reproduces how often:** 100%

### Versions

```
$ atom-beta --version
Atom    : 1.37.0-beta1
Electron: 2.0.18
Chrome  : 61.0.3163.100
Node    : 8.9.3
$ apm-beta --version
apm  2.1.7
npm  6.2.0
node 8.9.3 x64
atom 1.37.0-beta1
python 2.7.16
git 2.20.1
$ lsb_release -rd
Description:    Ubuntu 19.04
Release:        19.04
$ apt-cache policy atom-beta | head -n11
atom-beta:
  Installed: 1.37.0-beta1
  Candidate: 1.37.0-beta1
  Version table:
 *** 1.37.0-beta1 500
        500 https://packagecloud.io/AtomEditor/atom/any any/main amd64 Packages
        100 /var/lib/dpkg/status
     1.37.0-beta0 500
        500 https://packagecloud.io/AtomEditor/atom/any any/main amd64 Packages
     1.36.0-beta2 500
        500 https://packagecloud.io/AtomEditor/atom/any any/main amd64 Packages
```

### Additional Information

- See [this Ubuntu bug](https://bugs.launchpad.net/ubuntu/+source/gnome-shell/+bug/1826219) for further description.
- Saving a file causes a similar lock, though much shorter (~1 second).
- Google Chrome seems to cause similar locks (though much shorter in duration: â‰¤1 second, and not as repeatable), which maybe points to something underlying Electron/Chromium?",""
"73","Support Semantic Highlighting on Tree-Sitter Grammars","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

---

Keep in mind that Atom is highly customizable in a number of ways and we strongly prefer that you consider these options before filing this issue:

* https://flight-manual.atom.io/using-atom/sections/basic-customization/: tweak Atom's configuration, styles, and keybindings.
* https://flight-manual.atom.io/using-atom/sections/atom-packages/: install a community package.
* https://flight-manual.atom.io/hacking-atom/: use the Atom API in your init script, to create a package, or to enhance an existing package.

If you're convinced that none of these options are appropriate for the feature you want, please explain why that's the case by completely filling out the issue template below.

Also note that the Atom team has finite resources so it's unlikely that we'll work on feature requests. If we're interested in a particular feature however, we'll follow up and ask you to submit an RFC to talk about it in more detail.

-->

## Summary

Please make token text available to Tree-Sitter grammars when requesting scope information, and possibly create a way to return different scopes for each lexical token.

## Motivation

The current implementation of [semanticolor](https://atom.io/packages/semanticolor) doesn't work with Tree-Sitter grammars. I'd like to be able to take advantage of Tree-Sitter, but this requires the grammar to be aware of the text a scope is being requested for, and to be able to return separate scopes for each lexical token in a scope.

## Describe alternatives you've considered

By changing `tree-sitter-language-mode.js` line 1060 from this:

```
return this.languageLayer.languageMode.grammar.idForScope(scopeName)
```

to this:

```
return this.languageLayer.languageMode.grammar.idForScope(scopeName, this.treeCursor.nodeText)
```

I was able to produce somewhat reasonable results, but this doesn't give me a way to assign different scopes to each lexical token, so the results aren't perfect:

![example](https://raw.githubusercontent.com/digitallyserviced/semanticolor/master/tree-sitter.png)",""
"74","Do Atom can link to custom mixin details ?","## Summary

Mixin details link to.

## Motivation

In purpose to switch from netbeans.

## Describe alternatives you've considered

As Netbeans does, do Atom can link to custom mixin details on click on it ? If yes, how to that (ctl + click don't) ?

Thanks",""
"75","""Fetching outdated packages and themes failed"" console error when starting Atom","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

![å›¾ç‰‡](https://user-images.githubusercontent.com/8848263/55445846-cc9e9380-55ef-11e9-88f6-6f8b9bb143cb.png)


### Steps to Reproduce

> Open atom and it appears

**Expected behavior:** [What you expect to happen]

> Don't complain

**Actual behavior:** [What actually happens]

> The console reported an error

**Reproduces how often:** [What percentage of the time does it reproduce?]

> 100% 
> - Even though I used `atom --safe`

### Versions

![å›¾ç‰‡](https://user-images.githubusercontent.com/8848263/55445929-3028c100-55f0-11e9-84c5-eec06f64688a.png)

### Additional Information

```shell
â”œâ”€â”€ atom-beautify@0.33.4
â”œâ”€â”€ atom-ide-datatip@0.9.4
â”œâ”€â”€ atom-ide-definitions@0.2.0
â”œâ”€â”€ atom-ide-markdown-service@1.1.1
â”œâ”€â”€ atom-ide-signature-help@0.4.5
â”œâ”€â”€ atom-material-syntax@1.0.8
â”œâ”€â”€ atom-ternjs@0.19.1
â”œâ”€â”€ autoprefixer@3.7.1
â”œâ”€â”€ busy-signal@2.0.1
â”œâ”€â”€ color-picker@2.3.0
â”œâ”€â”€ docblockr@0.13.7
â”œâ”€â”€ emmet@2.4.3
â”œâ”€â”€ ex-mode@0.18.0
â”œâ”€â”€ file-header@1.13.9
â”œâ”€â”€ file-icons@2.1.31
â”œâ”€â”€ git-time-machine@2.1.0
â”œâ”€â”€ highlight-selected@0.16.0
â”œâ”€â”€ ide-php@0.7.18
â”œâ”€â”€ intentions@1.1.5
â”œâ”€â”€ language-apache@1.8.0
â”œâ”€â”€ language-ini@1.20.0
â”œâ”€â”€ language-nginx@0.8.0
â”œâ”€â”€ linter@2.3.0
â”œâ”€â”€ linter-jshint@3.1.15
â”œâ”€â”€ linter-ui-default@1.7.1
â”œâ”€â”€ markdown-preview-enhanced@0.15.10 (disabled)
â”œâ”€â”€ merge-conflicts@1.4.5
â”œâ”€â”€ minimap@4.29.9
â”œâ”€â”€ minimap-bookmarks@0.4.2
â”œâ”€â”€ minimap-cursorline@0.2.0
â”œâ”€â”€ minimap-git-diff@4.3.1
â”œâ”€â”€ minimap-linter@2.2.1
â”œâ”€â”€ minimap-quick-highlight@1.0.1
â”œâ”€â”€ minimap-selection@4.5.0
â”œâ”€â”€ minimap-split-diff@0.3.7
â”œâ”€â”€ open-in-browser@0.5.2
â”œâ”€â”€ pigments@0.40.2
â”œâ”€â”€ platformio-ide-terminal@2.9.1
â”œâ”€â”€ project-manager@3.3.6
â”œâ”€â”€ quick-highlight@0.13.0
â”œâ”€â”€ relative-numbers@0.9.0
â”œâ”€â”€ remote-ftp@2.2.2
â”œâ”€â”€ split-diff@1.6.0
â”œâ”€â”€ sync-settings@0.8.6
â”œâ”€â”€ todo-show@2.3.2
â”œâ”€â”€ tree-view-git-status@1.5.2
â””â”€â”€ vim-mode-plus@1.36.0
```",""
"76","Invisible window when Atom starts on Elementary OS","### Description

I've taken invisible window when Atom starts, this behavior occurs when the Atom has closed in maximized window mode.

### Steps to Reproduce

1. Open Atom normally
2. Put in maximized window mode
3. Close the Atom
4. Re-open the Atom

**Expected behavior:**
Expected the Atom's window displayed.

**Actual behavior:**
Atom's window don't displays.

To get the window back, I click on top-left of desktop (bellow ""Application menu"") and drag to some direction to unmaximize the window.

### Versions
**Atom version**
```
Atom    : 1.35.1
Electron: 2.0.18
Chrome  : 61.0.3163.100
Node    : 8.9.3
```

**OS version**
```
Distributor ID:	elementary
Description:	elementary OS 5.0 Juno
Release:	5.0
Codename:	juno
Linux 4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
```

### Additional Information
**My partial solucion**
To prevent maximized window during Atom loading, I put this snippet of code in `init.coffee`  file:
```coffeescript
if atom.applicationDelegate.isWindowMaximized()
    atom.applicationDelegate.unmaximizeWindow();
```
Sorry for my bad english.
",""
"77","#! in package.json breaks package install: npm ERR! path /usr/share/atom/resources/app/apm/node_modules/npm/node_modules/sntp/package.json","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description



### Steps to Reproduce

1. Start Atom
2. Select Edit > Preferences > + Install
3. Search for a package, e.g. _ansible_
4. Click desired blue [Install] button on matching package, e.g. _language-ansible_

**Expected behavior:** [What you expect to happen]

Package installs.

**Actual behavior:** [What actually happens]

Pink error box reports, `Installing â€œlanguage-ansible@0.2.2â€? failed.Show outputâ€¦`
Clicking `Show outputâ€¦` reveals

    npm ERR! path /usr/share/atom/resources/app/apm/node_modules/npm/node_modules/sntp/package.json
    npm ERR! Error parsing /usr/share/atom/resources/app/apm/node_modules/npm/node_modules/sntp/package.json: Unexpected token # in JSON at position 0

    npm ERR! A complete log of this run can be found in:
    npm ERR!     /home/cainesaj/.atom/.apm/_logs/2019-03-18T16_34_52_243Z-debug.log

**Reproduces how often:** [What percentage of the time does it reproduce?]

100%.

### Versions

    $ cat /etc/redhat-release ; atom --version ; atom --safe
    Fedora release 29 (Twenty Nine)
    Atom    : 1.34.0
    Electron: 2.0.16
    Chrome  : 61.0.3163.100
    Node    : 8.9.3

and

    $ cat /etc/lsb-release ; atom --version ; atom --safe
    DISTRIB_ID=Ubuntu
    DISTRIB_RELEASE=18.04
    DISTRIB_CODENAME=bionic
    DISTRIB_DESCRIPTION=""Ubuntu 18.04.2 LTS""
    Atom    : 1.35.1
    Electron: 2.0.18
    Chrome  : 61.0.3163.100
    Node    : 8.9.3


### Additional Information

Removing the first line, `#!/usr/bin/node`, from `/usr/share/atom/resources/app/apm/node_modules/npm/node_modules/sntp/package.json` results in the package installing as expected.

Note that this file is part of the installed atom package and that having a #! on the first line of any interpreted script is always appropriate (though `#!/usr/bin/env node` would be more portable).

    $ rpm -qf /usr/share/atom/resources/app/apm/node_modules/npm/node_modules/sntp/package.json
    atom-1.34.0-2.fc29.x86_64
",""
"78","Provide Option to Enable 'darkTheme' Option of BrowserWindow","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Description

This has come up multiple times, but all issues regarding this problem I could find have been locked because of low activity, so Iâ€™m opening a new one.
On Linux many GTK themes provide a dark variant of the theme for windows with predominantly dark contents. Electron allows windows to request this dark variant through the ""darkTheme"" option of the BrowserWindow class, but Atom provides no way to set that option for a user.
This is an issue because if title bars are generally light, they stick out like a sore thumb if the user chooses to use a dark UI / syntax theme and are very distracting. In such cases it would be ideal for the user to be able to set an option to have Atom use the dark theme variant.

### Steps to Reproduce

1. Open Atom on a Linux system with a light gtk theme with a dark variant
2. See the light title bar of Atom and be distracted by it
3. Look for an option to set Atom to use the dark theme variant and not find it

**Expected behavior:** Finding an option to have Atom use the dark theme variant, set it and restart Atom, now without a distracting light titlebar.
**Actual behavior:** There's no such option.

**Reproduces how often:** Every time.

### Versions

Atom: 1.34.0
APM: 2.1.3

### Additional Information

Perhaps this could be implemented similiarly to how the custom title bar styles on macOS are handled, i.e. during the initialisation of a BrowserWindow, check the configuration whether the option for 'darkTheme' is set and if it is, set it to `true` in the BrowserWindow options. 

Thank you all for your hard work and for considering this issue.",""
"79","bootstrap error on centos 6.6: a lot errors and warnings for ../src/parser.c","Tried to build atom v1.34.0 on centOS v6.6. All the prerequisites have been installed, but when running ""./script/bootstra"", I got a lot of errors and warnings (see below, only very few error and warning lines are copied here). I believe it is a very small issue that caused a lot errors.

Alex.

Stdout:
Node:   v6.11.4
Npm:    v3.10.10
Installing script dependencies
Installing apm
apm  2.1.3
npm  6.2.0
node 8.9.3 x64
atom unknown
python 2.7.11
git 2.18.0
Installing modules âœ—

Stderr:
....
gyp verb build/config.gypi writing out config file: /mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c/build/config.gypi
gyp verb config.gypi checking for gypi file: /mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c/config.gypi
gyp verb common.gypi checking for gypi file: /mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c/common.gypi
gyp verb gyp gyp format was not specified; forcing ""make""
gyp info spawn /mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/bin/python-interceptor.sh
gyp info spawn args [ '/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/node_modules/node-gyp/gyp/gyp_main.py',
gyp info spawn args   'binding.gyp',
gyp info spawn args   '-f',
gyp info spawn args   'make',
gyp info spawn args   '-I',
gyp info spawn args   '/mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c/build/config.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/node_modules/node-gyp/addon.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/home/shengxin/.atom/.node-gyp/.node-gyp/iojs-2.0.16/common.gypi',
gyp info spawn args   '-Dlibrary=shared_library',
gyp info spawn args   '-Dvisibility=default',
gyp info spawn args   '-Dnode_root_dir=/home/shengxin/.atom/.node-gyp/.node-gyp/iojs-2.0.16',
gyp info spawn args   '-Dnode_gyp_dir=/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/node_modules/node-gyp',
gyp info spawn args   '-Dnode_lib_file=iojs.lib',
gyp info spawn args   '-Dmodule_root_dir=/mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c',
gyp info spawn args   '--depth=.',
gyp info spawn args   '--no-parallel',
gyp info spawn args   '--generator-output',
gyp info spawn args   'build',
gyp info spawn args   '-Goutput_dir=.' ]
gyp verb command build []
gyp verb build type Release
gyp verb architecture x64
gyp verb node dev dir /home/shengxin/.atom/.node-gyp/.node-gyp/iojs-2.0.16
gyp verb `which` succeeded for `make` /usr/bin/make
gyp info spawn make
gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]
In file included from ../src/parser.c:1:
../src/tree_sitter/parser.h:52: warning: declaration does not declare anything
../src/tree_sitter/parser.h:58: warning: declaration does not declare anything
../src/tree_sitter/parser.h:73: warning: declaration does not declare anything
../src/parser.c:4: warning: expected [error|warning|ignored] after â€˜#pragma GCC diagnosticâ€™
../src/parser.c:58245: error: unknown field â€˜countâ€™ specified in initializer
../src/parser.c:58245: warning: missing braces around initializer
../src/parser.c:58245: warning: (near initialization for â€˜ts_parse_actions[0].actionâ€™)

...

make: *** [Release/obj.target/tree_sitter_c_binding/src/parser.o] Error 1
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/node_modules/node-gyp/lib/build.js:276:23)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Linux 2.6.32-504.el6.x86_64
gyp ERR! command ""/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/bin/node"" ""/mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/node_modules/.bin/node-gyp"" ""rebuild""
gyp ERR! cwd /mnt/share/rh/source/small_packages/temp/atom-1.34.0/node_modules/tree-sitter-c
gyp ERR! node -v v8.9.3
gyp ERR! node-gyp -v v3.4.0
gyp ERR! not ok 
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! tree-sitter-c@0.13.10 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the tree-sitter-c@0.13.10 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/shengxin/.atom/.apm/_logs/2019-03-01T00_06_14_997Z-debug.log[39m
child_process.js:495
    throw err;
    ^

Error: Command failed: /mnt/share/rh/source/small_packages/temp/atom-1.34.0/apm/node_modules/atom-package-manager/bin/apm --loglevel=error install
    at checkExecSyncError (child_process.js:472:13)
    at Object.execFileSync (child_process.js:492:13)
    at module.exports (/mnt/share/rh/source/small_packages/temp/atom-1.34.0/script/lib/run-apm-install.js:14:16)
    at Object.<anonymous> (/mnt/share/rh/source/small_packages/temp/atom-1.34.0/script/bootstrap:44:1)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
",""
"80","clean install of atom on osx fails to open a new window","A clean install of atom on osx fails to open a new window.

**step 1 - remove your configs:**

```
rm -rf ~/.atom
rm -rf /usr/local/bin/atom
rm -rf /usr/local/bin/apm
rm -rf /Applications/Atom.app
rm -rf ~/Library/Preferences/com.github.atom.plist
rm -rf ~/Library/Application Support/com.github.atom.ShipIt
rm -rf ~/Library/Application Support/Atom
rm -rf ~/Library/Saved Application State/com.github.atom.savedState
rm -rf ~/Library/Caches/com.github.atom
rm -rf ~/Library/Caches/Atom
```

**step 2 - download a fresh copy of atom**

**step 3 - start atom**

either via the CLI or by clicking the app

actual:

the atom icon shows up
![image](https://user-images.githubusercontent.com/265409/53205561-e493f800-35eb-11e9-8273-ee35ac2c227e.png)

expected:

a new atom window to open

expected 2:

a way to debug why atom fails to start

",""
"81","EBUSY: resource busy or locked, unlink","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [ x] Put an X between the brackets on this line if you have done all of the following:
    *x Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    *x Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * xChecked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    *x Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * xChecked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description
EBUSY: resource busy or locked
[Description of the issue]
I am not able to install any package for some reason. It looks like a file is locked but even if i delete the temp directory i can't fix it. I tried safe mode and it doesn't work either 

VM22 <embedded>:14 Installing package sort-lines failed Error: Installing â€œsort-lines@0.18.0â€? failed.
    at C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\static\<embedded>:11:899339
    at r (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\static\<embedded>:11:893791)
    at o (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\static\<embedded>:14:1032547)
    at ChildProcess.n.process.on.e (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\static\<embedded>:14:1032753)
    at emitTwo (events.js:126:13)
    at ChildProcess.emit (events.js:214:7)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12) C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\apm\node_modules\temp\node_modules\rimraf\rimraf.js:218
      throw er
      ^

Error: EBUSY: resource busy or locked, unlink 'C:\Users\jherna3\AppData\Local\Temp\8\apm-install-dir-119119-19568-ng8g0e.ck9qp'
    at Object.fs.unlinkSync (fs.js:1061:18)
    at rimrafSync (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\apm\node_modules\temp\node_modules\rimraf\rimraf.js:211:13)
    at cleanupDirsSync (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\apm\node_modules\temp\lib\temp.js:143:5)
    at process.cleanupSync (C:\Users\jherna3\AppData\Local\atom\app-1.34.0\resources\app\apm\node_modules\temp\lib\temp.js:196:19)
    at emitOne (events.js:121:20)
    at process.emit (events.js:211:7)

(anonymous) @ VM22 <embedded>:14
m @ VM22 <embedded>:11
(anonymous) @ VM22 <embedded>:11
r @ VM22 <embedded>:11
o @ VM22 <embedded>:14
n.process.on.e @ VM22 <embedded>:14
emitTwo @ events.js:126
emit @ events.js:214
ChildProcess._handle.onexit @ internal/child_process.js:198

### Steps to Reproduce

1. [First Step]
if happen during regular use, i notice while trying to install a package today 
however, it is not limited to a single package. IT happen to me once and i was to solve by deleting and reinstalling everything. but i can't be doing this on a daily basis. 

2. [Second Step]
3. [and so on...]

**Expected behavior:** [What you expect to happen]
i should be able to update or remove packages 

**Actual behavior:** [What actually happens]
i can't install packages anymore 

**Reproduces how often:** [What percentage of the time does it reproduce?]

### Versions
C:\Users\jherna3>atom --version

Atom    : 1.34.0
Electron: 2.0.16
Chrome  : 61.0.3163.100
Node    : 8.9.3

C:\Users\jherna3>atom --clear-window-state

C:\Users\jherna3>atom --clear-window-state

C:\Users\jherna3>apm links
C:\Users\jherna3\.atom\dev\packages (0)
â””â”€â”€ (no links)
C:\Users\jherna3\.atom\packages (0)
â””â”€â”€ (no links)

You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running.

### Additional Information

Any additional information, configuration or data that might be necessary to reproduce the issue.
",""
"82","Virtual memory leak, while executing make","Atom allocates huge amounts of memory without freeing it while a make process is running in a project directory of atom. Memory allocation stops when make exits and starts over when make is called. This happens for me on **linux** in **safe mode**.

### Steps to Reproduce

I'm checking out the linux repo and compile it with a default config. Other projects with some make load are working as well!

1. `git clone https://github.com/torvalds/linux.git `
2. `cd linux`
3. `make clean distclean`
4. `yes """" | make oldconfig`
5. `atom --safe ./`
6. `make`

**Expected behavior:**
Atom should not allocate huge amounts of memory.

**Actual behavior:**
While make is running atom allocates around 150 MB per second. After make is finished atom uses around 50 GB virtual memory on my system. 

**Reproduces how often:**
100% of the time.

### Versions

Atom    : 1.34.0
Electron: 2.0.16
Chrome  : 61.0.3163.100
Node    : 8.9.3

at least from 1.32.0 this issue was present.

### Additional Information

Linux Mint Tara 19 (Ubuntu 18.04) @ 4.19.4-041904-generic
Dell XPS 15 9570 @ 32 GB RAM
",""
"83","macos: opening multiple files from the command line could be improved","I'm using Atom on macos,

Sometimes I want to open multiple files from the command line.
This needs improvement, it does not yet work as expected.

Three ways to open multiple files (on macos):
- atom file file ...
- open -a Atom file file ...
- for f in file file ...;do;open -a Atom $f;done


To make that short:
Atom on macos should respond to the Finder 'open' event.

The 'atom' script should be rewritten,
to send the Finder 'open' event when given one or multiple file names.

It should not start a new full blown instance of Electron,
just to find out that Atom is already running.

--

added bonus, caveat:

opening files at a specific line should still work,
aka: open file:line is a bonus

---
and a new feature:
opening files at a regexp would be nice

I suggest:
open file:/foo

which should open the file
with the cursor positioned
on the first match of foo



 












",""
"84","Bitmap fonts break GTK menus","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description
When the global gtk font is set to a bitmap font (with `lxappearance`), GTK dialogs render all characters as squares. This only happens in Atom (even chromium works fine). If I set the font to something like Roboto, start Atom, then change it back, the Atom dialogs will display fine.

### Steps to Reproduce

1. Use a bitmap font for gtk applications ([zevv-peep](http://zevv.nl/play/code/zevv-peep/) in my case)
2. Start Atom, open the ""Open File"" dialog
3. all text is rendered as squares

**Expected behavior:** 
All text gets displayed in the bitmap font

**Actual behavior:**
it's just squares
![image](https://user-images.githubusercontent.com/23422690/51682447-bec50480-1fe7-11e9-917e-cf0b0dd99447.png)


**Reproduces how often:**
always

### Versions
```
atom --version

Atom    : 1.34.0
Electron: 2.0.16
Chrome  : 61.0.3163.100
Node    : 8.9.3

apm --version

apm  2.1.3
npm  6.2.0
node 8.9.3 x64
atom 1.34.0
python 2.7.15+
git 2.20.1
```
Running on Debian Sid

### Additional Information

Font used is http://zevv.nl/play/code/zevv-peep/",""
"85","Incorrectly Saving a file in a FUSE folder (cryptomator vault)","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

I want to save a new file to a [cryptomator](https://cryptomator.org/) vault folder. But often the file content is changed automatically after saving it. I found one example that I can reproduce every time, shared below.

### Steps to Reproduce

1. Create and unlock a [cryptomator](https://cryptomator.org/) FUSE vault folder.
2. Open Atom editor and create test.txt inside the cryptomator FUSE vault folder.
3. Enter the following contents in the file:
```
1
2
3
4
```
4. Save the file.
5. Delete the line 2 and 3 so that you see the following content:
```
1
4
```
6. Save the file.
7. The content has automatically changed to and saved into the file:
```
1
4
3
4
```

**Expected behavior:** [What you expect to happen]
After the second save (step 6), the file content should have remained as described in step 5.

**Actual behavior:** [What actually happens]
The content changed as described in step 7.

**Reproduces how often:** [What percentage of the time does it reproduce?]
100%. Tested it 5 times. On two different machines.

### Versions

atom 1.34.0
apm  2.1.3
npm  6.2.0
node 8.9.3 x64
atom 1.34.0
python 2.7.15rc1
git 2.17.1

OS: Ubuntu 18.04
Cryptomator 1.4.1

### Additional Information
Cannot reproduce the issue with other editors like gedit and sublimetext.

Screenshot:
![atom-cryptomator-vault-save](https://user-images.githubusercontent.com/14300004/51538172-83d89a80-1e48-11e9-8d1e-4dc6fc33c860.gif)
",""
"86","Subpixel anti-aliasing stops working if CSS is used to add smooth scrolling","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

I wanted to add smooth scrolling to text editors because Atom seems to not have this option and isn't smooth by default, it only is in the settings editor. But doing so breaks subpixel anti-aliasing, which makes font a bit blurry compared to other text editors.

### Steps to Reproduce

1. Put this in your stylesheet, based on a comment on another issue https://github.com/atom/atom/issues/10276#issuecomment-323538272:
```less
atom-text-editor.editor > div > .scroll-view > div,
atom-text-editor.editor > div > .gutter-container > div {
    transition: -webkit-transform .09s ease;
}
```
2. Open Atom in safe mode
3. Open any file big enough to be scrolled (it can be plain text)
4. Take a screenshot and zoom it: see subpixel anti-aliasing works
5. Scroll through about half the visible height, and go back to the top. Take another screenshot: notice there is no subpixel anti-aliasing anymore.

It comes back if the file is reopened, but the same steps make it break everytime.

**Expected behavior:**

I expected subpixel antialiasing to just work.
There is another issue with this way of adding smooth scrolling (text lags behind when scrolling), but I did not expect this to affect subpixel antialiasing at all. Those features sound fairly unrelated, but I'm not an expert.

**Actual behavior:**

Subpixel antialiasing stops working.

**Reproduces how often:**

99% (everytime a text editor gets scrolled by more than about a few lines)

### Versions

Atom: 1.33.1 x64
Electron: 2.0.16
Chrome: 61.0.3163.100
Node: v8.9.3
OS: Windows 7 64 bits
",""
"87","Add Mac Services support to File/Folder context menus","## Summary

While #10213 has the highly useful goal of providing text-based Mac Services, I'd also like to see file/folder-based Mac Services to be available upon context menu clicks of tab and Project Tree files and folders.

## Motivation

I'd like to be able to right-click a tab to have the repository of that file be opened in SourceTree (version control app) or use other services (including Automator-created ones) based on a clicked file/folder without leaving Atom.

## Describe alternatives you've considered

A package could be designed for a one-off solution, but without integrating with Mac's cross-application Services system, one would be forced to design solutions which can't leverage this Mac-standard means of inter-app communication.

## Additional context

I want to do the equivalent to this within Atom file context menus:
![screen shot 2018-11-23 at 8 45 27 am](https://user-images.githubusercontent.com/20234/48925224-42854680-eefc-11e8-992b-f96b2a6b195c.png)
",""
"88","Alt+LMB (Left Mouse Button) double click for subword selection","## Summary

Alt+LMB (Left Mouse Button) double click for subword selection.

## Motivation

You can select words via `ctrl-left` and `ctrl-right`, also subwords via `alt-`. And you can select words via mouse by double click, but you can't select subwords via mouse.

## Describe alternatives you've considered

I saw #2306, but it's about single click, as I understood.

Anyway, it can be configurable (I don't need for suggested selection there).

For now I don't see something (`lmb`, `mouse`, `click`) with mouse in Keybindings Settings.

## Additional context

It's very handy for snake_cased syntax, like Ruby, without `_` in Non Word Characters. I think for camelCased it's also handy.
",""
"89","git-diff displays falsely gutter for non-utf8 encoded files","Atom falsely reports rows as being modified if the file is non-utf8 and contains extended latin characters (eg. Ã¥, Ã¤, Ã¶).

![image](https://user-images.githubusercontent.com/1257591/46802095-0ee3c800-cd65-11e8-976a-1e88387d5c8b.png)
",""
"90","Display issues using Mojave through Parallels VM","

### Prerequisites

* [instructions for starting in safe mode do not work. No such command ] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

Running macOS Mojave 10.14 through Parallels VM. (both Parallels 13 and 14)

### Steps to Reproduce

1. Download and install free trial of Parallels 14. 
2. Download Mojave from App store
3. Create new Parallels VM using Mojave install file
4. Download and install Atom
5. Open Atom

**Expected behavior:** Expected to be able to view welcome screen, open and view preferences, create and edit new documents

**Actual behavior:** Completely blank screen. Some of the contents of the welcome screen will appear as you move the mouse across the app window. But those areas disappear as soon as the mouse moves out of range.

**Reproduces how often:** 100% of the time. I have never been able to get it to display correctly.

### Version is current one available from the site: https://atom.io/ and the version number cannot be displayed due to this issue.

You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. (as mentioned previously, this does not work. command not found)

### Additional Information

Any additional information, configuration or data that might be necessary to reproduce the issue.
",""
"91","Cannot See Atom Window with macOS 10.13.6  ","### Prerequisites

* [ X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

Atom will startup but fail to load any windows when trying to use the program. This issue occurs both in safe mode and normal. I have downgraded to 1.27.2 where atom works fine again. Potentially a problem with the latest electron upgrade or the fact that I am using macOS 10.13.6 as the issue was noticed around the time the OS was updated. 

### Steps to Reproduce

1. Open atom 
2. Applications boots but no windows are visible. I have tried opening files and using the command line to reset the view but to no prevail
3. Behaviour is repeated in safe mode
4. I have tried all three versions of 1.28 without any success

**Expected behavior:** [What you expect to happen]
Can see the editing screen

**Actual behavior:** [What actually happens]
App boots but no screen loads, repeated in safe mode. Unable to use software

**Reproduces how often:** [What percentage of the time does it reproduce?]
All the time, the application now unusable. 

### Versions
- 1.28.0
- 1.28.1
- 1.28.2

This is the second time I have posted this as the issue was closed with no success. Please let me know what other information I can provide to help replicate the bug. ",""
"92","cannot search for packages inside atom editor GUI inside virtual box behind corporate proxy","I am unable to search for packages inside the atom editor GUI. Although `apm `via command line is running fine. I am able to install packages via `apm install` command. 
But with GUI it throws some error:
`getaddrinfo EAI_AGAIN atom.io:443`
The atom version I am using is
Atom    : 1.28.0
Electron: 2.0.3
Chrome  : 61.0.3163.100
Node    : 8.9.3 
I am working behind a proxy network and proxy settings are taken care off in the `~.apmrc `file.
One more thing that I am able to install featured packages via GUI but not search the new ones
I am working on 64-bit ubuntu 16.04 inside a virtual box with the host is Windows 10
Also, the atom is working fine with another Linux 32-bit machine in the same host inside a virtual box.

",""
"93","Data loss when editing symlinked project","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description
Atom fails to use proper filepath when a project is opened in a symlinked project and a file is opened using ""Find File""

### Steps to Reproduce
1.
 ```
$ mkdir project
$ ln -s project linktoproject
$ cd linktoproject
$ echo hello > hi.txt
$ atom .
```

2. Click `hi.txt` on project sidebar. Make some edits without saving
3. `c-p` for find file and open `hi.txt`. Make changes and save
4. go back to first tab and save

**Expected behavior:**
I should have two views of the same file, with edits propagating to both. `c-p` should open `linktoproject/hi.txt`

**Actual behavior:**
Atom opens `linktoproject/hi.txt` on click but opens `project/hi.txt` from find file. Atom thinks these are two different files. After saving both files, there is no indication that one of the files now has unsaved information that will be forever lost if closed.

**Reproduces how often:** [What percentage of the time does it reproduce?]
100%

### Versions

You can get this information from copy and pasting the output of `atom --version` and `apm --version` from the command line. Also, please include the OS and what version of the OS you're running.
Atom    : 1.23.3
Electron: 1.6.15
Chrome  : 56.0.2924.87
Node    : 7.4.0

apm  1.18.12
npm  3.10.10
node 6.9.5 x64
atom 1.23.3
python 3.6.2
git 2.7.4

Ubuntu 16.04 4.4.0-119-generic

### Additional Information

Any additional information, configuration or data that might be necessary to reproduce the issue.
",""
"94","text fields not showing typed characters","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

text fields not showing typed characters
a snap shot of these fields and all of those has value but they are invisible even in setting view 
![screen shot 2018-04-06 at 10 48 31 am](https://user-images.githubusercontent.com/8351624/38436302-1ec35b16-3989-11e8-90c4-c7c68d100f3c.png)
. 

![screen shot 2018-04-05 at 9 28 32 am](https://user-images.githubusercontent.com/8351624/38378999-36665348-38b4-11e8-95d5-5b05a51439d2.png)
![screen shot 2018-04-05 at 9 33 31 am](https://user-images.githubusercontent.com/8351624/38379064-6e82b316-38b4-11e8-8b97-607baee0fd54.png)

![screen shot 2018-04-05 at 9 30 31 am](https://user-images.githubusercontent.com/8351624/38379008-3e692b88-38b4-11e8-901c-6f00d0e32e41.png)



### Steps to Reproduce

1. oppening atom
2. try to find something by pushing Ctrl + f
3. start typing 

**Expected behavior: to show characters 

**Actual behavior: fields seems has value but they are invisible

**Reproduces how often: always

### Versions

Atom    : 1.25.1
Electron: 1.7.11
Chrome  : 58.0.3029.110
Node    : 7.9.0

### Additional Information

I have virtual mac on my machine and i'm not sure if it's related to that one or not. I had older version of atom and was working properly after updating to last version happened to me.  
",""
"95","Linux only: editor crashes with rm -r node_modules","
I have the editor open, no tabs from node_modules showing.

If I sudo rm -r node_modules/

The editor crashes.   Also I have to do sudo, so not sure if atom has these files open when it shouldn't?  Windows and other systems didn't need sudo to remove node_modules.

I'm on Debian now.",""
"96","Atom crashes when installing module via NPM","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

On Linux Mint 18.3, Atom crashes when installing/uninstalling a module via NPM while sitting on the app's root directory.

### Steps to Reproduce

1. Opened Bash terminal at app root directory
2. Typed `atom .` to open Atom
3. Typed `cd client && npm i -S react-slick` 
4. Atom will crash while the module is being downloaded/installed 

**Expected behavior:** Not to crash.

**Actual behavior:** It will either succeed or crash.

**Reproduces how often:** Crashes about 50% of the time.

### Versions

Linux Mint 18.3 4.13.0-26-generic x86_64

- **Atom**: 1.23.3
- **apm**: 1.18.12
- **Electron**: 1.6.15
- **Chrome**: 56.0.2924.87
- **git**: 2.7.4
- **Node**: 8.9.3
- **npm**: 5.6.0
- **python**: 2.7.12

### Additional Information

Video:
https://www.youtube.com/watch?v=GGF_xElWxbw

Checked and made sure node_modules wasn't being tracked:
![gitcached](https://user-images.githubusercontent.com/22607722/35186997-18088104-fdd2-11e7-8604-8a0d223dbfb1.png)

Extra steps:

- Renamed ~./atom to ~./atom_backup (still crashes)
- Started app with atom --safe (still crashes)
- Cleared atom window state (still crashes)

Happens randomly, as you can see here (I installed, uninstalled, reinstalled, then it crashed)
![crashpersist](https://user-images.githubusercontent.com/22607722/35186990-0f416aea-fdd2-11e7-8735-c42b94d12a4e.png)
",""
"97","[GPG key] Debian 9 gives error","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: https://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: https://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

Following directions on [Installing Atom on Debian](https://flight-manual.atom.io/getting-started/sections/installing-atom/#debian-and-ubuntu-debapt) gives error.

### Steps to Reproduce

1. 
```console
curl -L https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add -
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0
100  3941  100  3941    0     0   1446      0  0:00:02  0:00:02 --:--:--  4157
gpg: [don't know]: invalid packet (ctb=2d)
gpg: keydb_get_keyblock failed: Value not found
gpg: [don't know]: invalid packet (ctb=2d)
gpg: /tmp/apt-key-gpghome.J0QFGgZhHE/pubring.gpg: copy to '/tmp/apt-key-gpghome.J0QFGgZhHE/pubring.gpg.tmp' failed: Invalid packet
gpg: error writing keyring '/tmp/apt-key-gpghome.J0QFGgZhHE/pubring.gpg': Invalid packet
gpg: [don't know]: invalid packet (ctb=2d)
gpg: error reading '-': Invalid packet
gpg: import from '-' failed: Invalid packet
```
2. 
```console
http -d https://packagecloud.io/AtomEditor/atom/gpgkey 
HTTP/1.1 200 OK
Accept-Ranges: bytes
Cache-Control: max-age=31536000
Content-Disposition: attachment; filename=""AtomEditor-atom-4C6E74D6C0A35108.pub.gpg""
Content-Length: 3941
Content-Type: text/plain
Date: Sat, 20 Jan 2018 06:57:09 GMT
ETag: ""8e4172cc039b35f7764b4bdb1e909a13""
Last-Modified: Fri, 15 Dec 2017 19:31:58 GMT
Server: AmazonS3
x-amz-id-2: 4xFOGrDHF14bE9ZxEBNElY5+MZVSgiL1JrOklxihF3q62ysHV2QLWp1DBc2Vfl4JsF7YCHWqB1k=
x-amz-request-id: 0EEADE65F92A6029

Downloading 3.85 kB to ""AtomEditor-atom-4C6E74D6C0A35108.pub.gpg""
Done. 3.85 kB in 0.00067s (5.63 MB/s)
```
2.1
```console
sudo apt-key add AtomEditor-atom-4C6E74D6C0A35108.pub.gpg

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for root: 
gpg: [don't know]: invalid packet (ctb=2d)
gpg: keydb_get_keyblock failed: Value not found
gpg: [don't know]: invalid packet (ctb=2d)
gpg: /tmp/apt-key-gpghome.1ucakhx5KC/pubring.gpg: copy to '/tmp/apt-key-gpghome.1ucakhx5KC/pubring.gpg.tmp' failed: Invalid packet
gpg: error writing keyring '/tmp/apt-key-gpghome.1ucakhx5KC/pubring.gpg': Invalid packet
gpg: [don't know]: invalid packet (ctb=2d)
gpg: error reading 'AtomEditor-atom-4C6E74D6C0A35108.pub.gpg': Invalid packet
gpg: import from 'AtomEditor-atom-4C6E74D6C0A35108.pub.gpg' failed: Invalid packet
```

**Expected behavior:** That it would import the key(s) retrieved

**Actual behavior:** See console output in the steps above

**Reproduces how often:** 100%

### Versions
  - Debian 9.3
  - APT 1.4.8
  - Curl 7.52.0
  - httpie 0.9.8
### Additional Information
",""
"98","Feature requests: add primitives for multi-window-aware packages","I'm trying to write a package that needs to:

1. Be able to manipulate config and settings on a per-window basis
2. Be able to constrain which packages are loaded on a per-window basis
3. Be able to intercept and rewire config changes done by packages
4. Be able to intercept and realign packages with their proper serialization

And for that:

- I need a way to identify a window.
- I need a way to know when a single window is created/closed.
- I need a way to know when a single window receives focus.
- I need a way to restrict the packages loaded for a window.
    - This could be either whitelist (easier) or blacklist (not hard to compute from [this](https://atom.io/docs/api/v1.23.1/PackageManager#instance-getAvailablePackagePaths))
- I need a way to read and alter config settings (across packages) per-window.
- I need a way to control the serialized state used when creating a window.
    - I do *not* need a way to inspect it or otherwise modify its integrity.
    - I do *not* need to handle state separately from its package (and I wouldn't want to).

What I'm wanting to do is more or less an expanded, fuller version of [this](https://github.com/atom/atom/issues/5168), but I'm wanting to do it in userland where I have better flexibility.

Also, if any of these exist already, I'd like to know, so I can go ahead and strike them out.

------

Here's an incomplete high-level API proposal for all but serialized state control and ""on window startup"":

- `atom.window` - A self-reference to this window instance (not the DOM global).
- `atom.onDidOpenWindow(callback: (window) => any)` - Called with a new `AtomWindow` instance to control the other window.
- `AtomWindow::onDidClose(callback: () => any)` - Called when the window is closed.
- `AtomWindow::onDidReceiveFocus(callback: () => any)` - Called when the window receives focus.
- `AtomWindow::send(scope, message, ...args)` - Send an IPC message with a given scope.
- `AtomWindow::onDidReceiveMessage(scope, message, callback: (...args) => any)` - Receive a message with a given scope.
- `PackageManager::enablePackageForWindow(name)` - Does what it says.
- `PackageManager::disablePackageForWindow(name)` - Does what it says.
- `PackageManager::isPackageDisabledForWindow(name)` - Checks what it says.
- `Config::setForWindow(key, value)` - Set config for window
- `Config::getForWindow(key, value)` - Get config for window
- `Config::unsetForWindow(key, value)` - Unset config for window
- `Config::observeAll(options, callback: (value) => any)` - Observe all key changes.
    - I can detect nesting easily enough.

I can use IPC to control config settings and package disabling across windows using the above methods.",""
"99","Error ""unable to verify the first certificate""","![image](https://user-images.githubusercontent.com/29014463/33909381-7dee83a4-dfb1-11e7-89ce-5bce6a0328cf.png)

```
Request for package information failed: unable to verify the first certificate (UNABLE_TO_VERIFY_LEAF_SIGNATURE)
```",""
"100","Atom not opening files","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * [ ] Reproduced the problem in Safe Mode: http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * [x] Followed all applicable steps in the debugging guide: http://flight-manual.atom.io/hacking-atom/sections/debugging/
    * [x] Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * [x] Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * [x] Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description

If I open Atom via the GUI I can't open any files or preferences .etc.
Although if I open a file via terminal, atom works as intended even in safe mode.

I have tried running the command `atom --clear-window-state`

**Expected behavior:** Open a file

**Actual behavior:** Atom stays in the same state that it opened in.

**Reproduces how often:** 100%

### Versions
Atom: 1.22.1
Electron: 1.6.15
Chrome: 56.0.2924.87
Node: 7.4.0
OSX: 10.13.1
",""
"101","Tree View crashes Atom when opening file on remounted disk volume","### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: http://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages


### Description

The editor crashes when using ""tree view"" to open a file in a ""project folder"" that is located on a **re**mounted drive.

Please note that it is not necessary to actually access the volume (by e.g. opening a file). It seems that the volume disappearing/reappearing is enough for the editor to crash.

Also note that this behavior is **not** present when using File -> Open on the volume. Hence I believe it is related to the ""tree view"".

Crash logs from _Scenario 2_ has been attached.


[e0003a1c-b264-414b-849c-96d6ce864538.txt](https://github.com/atom/atom/files/1138162/e0003a1c-b264-414b-849c-96d6ce864538.txt)
[operation_log.txt](https://github.com/atom/atom/files/1138163/operation_log.txt)
[e0003a1c-b264-414b-849c-96d6ce864538.zip](https://github.com/atom/atom/files/1138171/e0003a1c-b264-414b-849c-96d6ce864538.zip)


### Steps to Reproduce

Note that this crash is reproducible in both _safe_ and _regular_ mode.

#### Scenario 1:

1. Make sure the volume is **not** already a ""project folder"" in Atom.
2. Mount the volume in DiskCryptor.
3. Start Atom.
3. Add a ""project folder"" pointing to the mounted volume.
4. Unmount the volume in DiskCryptor.
5. Remount the volume in DiskCryptor.
6. Open any file from the mounted volume.

#### Scenario 2:

1. Make sure the volume **is** already a ""project folder"" in Atom.
2. Mount the volume in DiskCryptor.
3. Start Atom.
4. Unmount the volume in DiskCryptor.
5. Remount the volume in DiskCryptor.
6. Open any file from the mounted volume.

#### Scenario 3:

This is my daily usage scenario.
The volume has been automatically unmounted the the end of the day.
At the beginning of each work day, I wake the computer from sleep mode.

1. Make sure the volume **is** already a ""project folder"" in Atom.
2. Mount the volume in DiskCryptor.
3. Start Atom.
4. Unmount the volume in DiskCryptor.
5. Put the computer to sleep (and go home for the day).
6. Wake up the computer.
7. Remount the volume in DiskCryptor.
8. Open any file from the mounted volume.

#### Expected behavior:

The editor should not crash when opening a file on a volume that was first mounted, then unmounted and finally remounted.

#### Actual behavior:

The editor crashes when trying to open any file on a **re**mounted volume.
This is regardless of whether any file (on any volume) was opened or not.

#### Reproduces how often:

Every time the scenario is repeated.


### Versions

`atom --version`
Atom    : 1.18.0
Electron: 1.3.15
Chrome  : 52.0.2743.82
Node    : 6.5.0

This is the current version I'm using, but this problem has been present much, much longer than this. Perhaps for years? I'm not certain.

`apm --version`
apm  1.18.1
npm  3.10.10
node 6.9.5 ia32
python 3.6.1
git 2.10.2.windows.1
visual studio 2015

Windows 10 Enterprise


### Additional Information

This happens on Windows 10 using [DiskCryptor](https://diskcryptor.net/wiki/Main_Page) to simulate an unplugged volume. Presumably, it is related to a volume being remounted, but it **could** also be related to network shares, as described in [ticket 14760](https://github.com/atom/atom/issues/14760).

**Prerequisite**
Use e.g. DiskCryptor to create a new volume.
Place a text file in that volume (in order to have content that can be opened by Atom).
",""
"102","Atom opens without any panes.","### Prerequisites

* [x] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: http://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages



### Description

Opening atom after updating to 1.18 results in a window without any panes or the dir tree. It is not a new window, it was opened with `atom .` with `pwd` set to a project dir.

### Steps to Reproduce

- update to 1.18.0
- `atom .` in project dir

**Expected behavior:** 

- i'd expect a usable code editor with panes.

**Actual behavior:** 

- no panes or dir tree

**Reproduces how often:**

100%

### Versions

Atom    : 1.18.0
Electron: 1.3.15
Chrome  : 52.0.2743.82
Node    : 6.5.0

apm  1.18.1
npm  3.10.10
node 6.9.5 x64
python 2.7.10
git 2.13.1

OSX 10.11.6

### Additional Information

",""
"103","Feature Request: Integrated Shell/Terminal Access","<!--

Have you read Atom's Code of Conduct? By filing an Issue, you are expected to comply with it, including treating everyone with respect: https://github.com/atom/atom/blob/master/CODE_OF_CONDUCT.md

Do you want to ask a question? Are you looking for support? The Atom message board is the best place for getting support: https://discuss.atom.io

-->

### Prerequisites

* [X] Put an X between the brackets on this line if you have done all of the following:
    * Reproduced the problem in Safe Mode: http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode
    * Followed all applicable steps in the debugging guide: http://flight-manual.atom.io/hacking-atom/sections/debugging/
    * Checked the FAQs on the message board for common solutions: https://discuss.atom.io/c/faq
    * Checked that your issue isn't already filed: https://github.com/issues?utf8=âœ“&q=is%3Aissue+user%3Aatom
    * Checked that there is not already an Atom package that provides the described functionality: https://atom.io/packages

### Description
Windows 10 now has a bash terminal running on an Ubuntu underpinning. I want to access this terminal using Atom. There are some packages which report to do this on Mac and/or Linux, but nothing that I've found for Windows. I think Atom should have shell functionality built in like Sublime Text or Microsoft Visual Studio Code. The later even allows you to choose which shell to use based on which shells are installed, including windows power shell, CMD, or bash.

### Steps to Reproduce
1. Open Atom
2. Write Code
3. Go to commit
4. Nowhere to commit
5. Have to open separate terminal window
6. Be sad

**Expected behavior:** [What you expect to happen]
1. Press some sort of key combo (whether ctrl+` or ctrl+Shift+P and type Terminal)
2. get access to terminal in window or pane
3. Terminal automatically changes directory to current directory of file that you're working on

**Actual behavior:** [What actually happens]
1. Nothing (currently)
2. Have to open terminal app seperately an change directory manually

**Reproduces how often:** [What percentage of the time does it reproduce?]
100%

### Versions
1.17

### Additional Information
Please consult Microsoft's Visual Studio Code editor for how to implement an integrated terminal well
",""
"104","Add an option to disable smooth scrolling","I was using Atom 1.8.8 previously which did not include smooth scrolling. Today I updated to 1.10 which has smooth scrolling enabled by default, but I cannot figure out how to turn it off. There do not seem to any plugins or tutorials on how to disable it either. In Chrome, the user can open chrome://flags and manually disable it, but I could not figure out how. [This post](https://discuss.atom.io/t/how-to-access-chrome-flags-in-electron/16470/6) gives me a few hints, but not much else unfortunately.
",""
"105","""Restart and Install"" does not restart Atom after update on Windows","### Prerequisites
- [ ] Can you reproduce the problem in [safe mode](http://flight-manual.atom.io/hacking-atom/sections/debugging/#using-safe-mode)?
- [x] Are you running the [latest version of Atom](http://flight-manual.atom.io/hacking-atom/sections/debugging/#update-to-the-latest-version)?
- [x] Did you check the [debugging guide](http://flight-manual.atom.io/hacking-atom/sections/debugging/)?
- [x] Did you check the [FAQs on Discuss](https://discuss.atom.io/c/faq)?
- [x] Are you reporting to the [correct repository](https://github.com/atom/atom/blob/master/CONTRIBUTING.md#atom-and-packages)?
- [x] Did you [perform a cursory search](https://github.com/issues?q=is%3Aissue+user%3Aatom+-repo%3Aatom%2Felectron) to see if your bug or enhancement is already reported?

For more information on how to write a good [bug report](https://github.com/atom/atom/blob/master/CONTRIBUTING.md#how-do-i-submit-a-good-bug-report) or [enhancement request](https://github.com/atom/atom/blob/master/CONTRIBUTING.md#how-do-i-submit-a-good-enhancement-suggestion), see the `CONTRIBUTING` guide.
### Description

When Squirrel notifies about new Atom release, after clicking ""Restart and Install"" button on about view, Atom exits, update completes with some errors logged to SquirrelSetup.log but Atom is not restarted.
This has been happening during every update since I installed Atom 1.8.0 or one version before that.

Here is the whole [SquirrelSetup.log](https://github.com/atom/atom/files/426153/SquirrelSetup.log.txt) containing every line since update to 1.8.0 on 2016-07-03.

Possible cause:

```
System.IO.IOException: The process cannot access the file 'C:\Users\User\AppData\Local\SquirrelTemp\tempe\lib\net45\atom.exe' because it is being used by another process.
```

Might be caused by security software locking the file druring scanning.
### Steps to Reproduce
1. Open about view when a new release is available
2. Wait for download to finish
3. Click ""Restart and Install"" button

**Expected behavior:**
Atom restarting after Squirrel completes updating to latest release

**Actual behavior:**
Atom is not restarting after updates have been applied
### Versions

Atom    : 1.9.7
Electron: 0.37.8
Chrome  : 49.0.2623.75
Node    : 5.10.0
Squirrel: 1.2.4.0

OS: Windows 10 Pro, version 1607, build 14393.51
",""
